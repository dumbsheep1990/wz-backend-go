syntax = "v1"

info (
    title: "后台仪表盘API"
    desc: "提供后台管理仪表盘数据的接口"
    author: "wz-backend-go"
    version: "1.0"
)

type (
    // 仪表盘概览数据
    DashboardOverviewResp {
        UserCount     int64 `json:"user_count"`      // 用户总数
        TenantCount   int64 `json:"tenant_count"`    // 租户总数
        OrderCount    int64 `json:"order_count"`     // 订单总数
        ContentCount  int64 `json:"content_count"`   // 内容总数
        // 最近7天每天的新增用户数
        NewUserTrend []struct {
            Date  string `json:"date"`
            Count int64  `json:"count"`
        } `json:"new_user_trend"`
        // 最近7天每天的新增订单数
        NewOrderTrend []struct {
            Date  string `json:"date"`
            Count int64  `json:"count"`
        } `json:"new_order_trend"`
        // 租户类型分布
        TenantTypeDistribution []struct {
            Type  int   `json:"type"`
            Count int64 `json:"count"`
        } `json:"tenant_type_distribution"`
    }

    // 系统设置请求
    SystemSettingReq {
        Key   string `json:"key" validate:"required"`
        Value string `json:"value" validate:"required"`
    }

    // 系统设置响应
    SystemSettingResp {
        Key   string `json:"key"`
        Value string `json:"value"`
    }

    // 系统设置列表响应
    SystemSettingListResp {
        Settings []SystemSettingResp `json:"settings"`
    }
)

@server (
    jwt: Auth
    group: admin
    middleware: AdminCheck
)
service Admin {
    @handler GetDashboardOverview
    get /api/v1/admin/dashboard/overview returns (DashboardOverviewResp)

    @handler GetSystemSettings
    get /api/v1/admin/settings returns (SystemSettingListResp)

    @handler UpdateSystemSetting
    put /api/v1/admin/settings (SystemSettingReq) returns (SuccessResp)
} 