syntax = "v1"

info (
    title: "后台租户管理API"
    desc: "提供平台管理员对租户进行管理的接口"
    author: "wz-backend-go"
    version: "1.0"
)

type (
    // 租户分页查询请求
    TenantListReq {
        Page      int    `form:"page,default=1"`
        PageSize  int    `form:"pageSize,default=10"`
        Name      string `form:"name,optional"`
        Subdomain string `form:"subdomain,optional"`
        Type      int    `form:"type,optional"`
        Status    int    `form:"status,optional"`
        StartTime string `form:"startTime,optional"`
        EndTime   string `form:"endTime,optional"`
    }

    // 租户详情
    TenantDetail {
        ID           int64  `json:"id"`
        Name         string `json:"name"`
        Description  string `json:"description"`
        Subdomain    string `json:"subdomain"`
        Type         int    `json:"type"`
        Status       int    `json:"status"`
        Logo         string `json:"logo"`
        ContactEmail string `json:"contact_email"`
        ContactPhone string `json:"contact_phone"`
        AdminUserID  int64  `json:"admin_user_id"`
        CreatedAt    string `json:"created_at"`
        UpdatedAt    string `json:"updated_at"`
        ExpireAt     string `json:"expire_at,optional"`
    }

    // 租户列表响应
    TenantListResp {
        Total int64          `json:"total"`
        List  []TenantDetail `json:"list"`
    }

    // 创建租户请求
    AdminCreateTenantReq {
        Name         string `json:"name" validate:"required"`
        Description  string `json:"description,optional"`
        Subdomain    string `json:"subdomain" validate:"required,alphanum"`
        Type         int    `json:"type" validate:"required"`
        Logo         string `json:"logo,optional"`
        ContactEmail string `json:"contact_email" validate:"required,email"`
        ContactPhone string `json:"contact_phone" validate:"required"`
        AdminUserID  int64  `json:"admin_user_id,optional"` // 可选，如果不提供，系统会创建一个默认管理员
        Status       int    `json:"status" validate:"required"`
        ExpireAt     string `json:"expire_at,optional"`
    }

    // 更新租户请求
    AdminUpdateTenantReq {
        Name         string `json:"name,optional"`
        Description  string `json:"description,optional"`
        Logo         string `json:"logo,optional"`
        ContactEmail string `json:"contact_email,optional"`
        ContactPhone string `json:"contact_phone,optional"`
        Status       int    `json:"status,optional"`
        ExpireAt     string `json:"expire_at,optional"`
    }

    // 创建租户响应
    AdminCreateTenantResp {
        ID        int64  `json:"id"`
        Name      string `json:"name"`
        Subdomain string `json:"subdomain"`
    }
)

@server (
    jwt: Auth
    group: admin
    middleware: AdminCheck
)
service Admin {
    @handler GetTenantList
    get /api/v1/admin/tenants (TenantListReq) returns (TenantListResp)

    @handler GetTenantDetail
    get /api/v1/admin/tenants/:id returns (TenantDetail)

    @handler CreateTenant
    post /api/v1/admin/tenants (AdminCreateTenantReq) returns (AdminCreateTenantResp)

    @handler UpdateTenant
    put /api/v1/admin/tenants/:id (AdminUpdateTenantReq) returns (SuccessResp)

    @handler DeleteTenant
    delete /api/v1/admin/tenants/:id returns (SuccessResp)
} 