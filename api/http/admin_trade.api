syntax = "v1"

info (
    title: "后台交易管理API"
    desc: "提供平台管理员对交易数据进行管理的接口"
    author: "wz-backend-go"
    version: "1.0"
)

type (
    // 订单分页查询请求
    OrderListReq {
        Page        int    `form:"page,default=1"`
        PageSize    int    `form:"pageSize,default=10"`
        OrderId     string `form:"orderId,optional"`
        UserId      int64  `form:"userId,optional"`
        Status      string `form:"status,optional"`
        ProductType string `form:"productType,optional"`
        StartTime   string `form:"startTime,optional"`
        EndTime     string `form:"endTime,optional"`
        TenantId    int64  `form:"tenantId,optional"`
    }

    // 订单详情
    OrderDetail {
        OrderId     string  `json:"order_id"`
        UserId      int64   `json:"user_id"`
        TenantId    int64   `json:"tenant_id"`
        ProductId   int64   `json:"product_id"`
        ProductType string  `json:"product_type"`
        ProductName string  `json:"product_name"`
        Quantity    int32   `json:"quantity"`
        Amount      float64 `json:"amount"`
        Currency    string  `json:"currency"`
        Status      string  `json:"status"`
        PaymentId   string  `json:"payment_id,optional"`
        PaymentType string  `json:"payment_type,optional"`
        PaymentTime string  `json:"payment_time,optional"`
        Description string  `json:"description,optional"`
        Metadata    string  `json:"metadata,optional"`
        CreatedAt   string  `json:"created_at"`
        UpdatedAt   string  `json:"updated_at"`
        ExpireTime  string  `json:"expire_time"`
    }

    // 订单列表响应
    OrderListResp {
        Total int64         `json:"total"`
        List  []OrderDetail `json:"list"`
    }

    // 更新订单状态请求
    UpdateOrderStatusReq {
        Status      string `json:"status" validate:"required"`
        Reason      string `json:"reason,optional"`
        OperatorId  int64  `json:"operator_id,optional"`
    }

    // 退款分页查询请求
    RefundListReq {
        Page      int    `form:"page,default=1"`
        PageSize  int    `form:"pageSize,default=10"`
        RefundId  string `form:"refundId,optional"`
        OrderId   string `form:"orderId,optional"`
        UserId    int64  `form:"userId,optional"`
        Status    string `form:"status,optional"`
        StartTime string `form:"startTime,optional"`
        EndTime   string `form:"endTime,optional"`
        TenantId  int64  `form:"tenantId,optional"`
    }

    // 退款详情
    RefundDetail {
        RefundId    string  `json:"refund_id"`
        OrderId     string  `json:"order_id"`
        UserId      int64   `json:"user_id"`
        TenantId    int64   `json:"tenant_id"`
        Amount      float64 `json:"amount"`
        Currency    string  `json:"currency"`
        Status      string  `json:"status"`
        Reason      string  `json:"reason"`
        Description string  `json:"description,optional"`
        ProcessedBy string  `json:"processed_by,optional"`
        ProcessTime string  `json:"process_time,optional"`
        CreatedAt   string  `json:"created_at"`
        UpdatedAt   string  `json:"updated_at"`
    }

    // 退款列表响应
    RefundListResp {
        Total int64          `json:"total"`
        List  []RefundDetail `json:"list"`
    }

    // 处理退款请求
    ProcessRefundReq {
        Action      string `json:"action" validate:"required"` // approve, reject
        Comment     string `json:"comment,optional"`
        OperatorId  int64  `json:"operator_id,optional"`
    }

    // 交易记录查询请求
    TransactionListReq {
        Page      int    `form:"page,default=1"`
        PageSize  int    `form:"pageSize,default=10"`
        UserId    int64  `form:"userId,optional"`
        Type      string `form:"type,optional"` // payment, refund, withdraw, adjustment
        Status    string `form:"status,optional"`
        StartTime string `form:"startTime,optional"`
        EndTime   string `form:"endTime,optional"`
        TenantId  int64  `form:"tenantId,optional"`
    }

    // 交易记录详情
    TransactionDetail {
        TransactionId string  `json:"transaction_id"`
        UserId        int64   `json:"user_id"`
        TenantId      int64   `json:"tenant_id,optional"`
        RelatedId     string  `json:"related_id"`
        Type          string  `json:"type"`
        Amount        float64 `json:"amount"`
        Currency      string  `json:"currency"`
        Status        string  `json:"status"`
        Description   string  `json:"description,optional"`
        Metadata      string  `json:"metadata,optional"`
        CreatedAt     string  `json:"created_at"`
    }

    // 交易记录列表响应
    TransactionListResp {
        Total int64               `json:"total"`
        List  []TransactionDetail `json:"list"`
    }

    // 财务报表请求
    FinancialReportReq {
        StartTime string `form:"startTime" validate:"required"`
        EndTime   string `form:"endTime" validate:"required"`
        TenantId  int64  `form:"tenantId,optional"`
        GroupBy   string `form:"groupBy,optional,default=day"` // day, week, month
    }

    // 财务报表数据项
    ReportItem {
        Date          string  `json:"date"`
        OrderCount    int64   `json:"order_count"`
        OrderAmount   float64 `json:"order_amount"`
        RefundCount   int64   `json:"refund_count"`
        RefundAmount  float64 `json:"refund_amount"`
        NetAmount     float64 `json:"net_amount"`
        CurrencyUnit  string  `json:"currency_unit"`
    }

    // 财务报表响应
    FinancialReportResp {
        StartTime    string       `json:"start_time"`
        EndTime      string       `json:"end_time"`
        TotalAmount  float64      `json:"total_amount"`
        ItemCount    int64        `json:"item_count"`
        CurrencyUnit string       `json:"currency_unit"`
        Items        []ReportItem `json:"items"`
    }

    // 统一响应
    SuccessResp {
        Success bool   `json:"success"`
        Message string `json:"message,optional"`
    }
)

@server (
    jwt: Auth
    group: admin
    middleware: AdminCheck
)
service Admin {
    @handler GetOrderList
    get /api/v1/admin/orders (OrderListReq) returns (OrderListResp)

    @handler GetOrderDetail
    get /api/v1/admin/orders/:id returns (OrderDetail)

    @handler UpdateOrderStatus
    put /api/v1/admin/orders/:id/status (UpdateOrderStatusReq) returns (SuccessResp)

    @handler GetRefundList
    get /api/v1/admin/refunds (RefundListReq) returns (RefundListResp)

    @handler GetRefundDetail
    get /api/v1/admin/refunds/:id returns (RefundDetail)

    @handler ProcessRefund
    put /api/v1/admin/refunds/:id/process (ProcessRefundReq) returns (SuccessResp)

    @handler GetTransactionList
    get /api/v1/admin/transactions (TransactionListReq) returns (TransactionListResp)

    @handler GetFinancialReport
    get /api/v1/admin/reports/financial (FinancialReportReq) returns (FinancialReportResp)
} 