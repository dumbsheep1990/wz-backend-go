// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v4.25.3
// source: api/rpc/trade.proto

package trade

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 订单相关消息
type Order struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OrderId       string                 `protobuf:"bytes,1,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`              // 订单ID
	UserId        int64                  `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                // 用户ID
	ProductId     int64                  `protobuf:"varint,3,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`       // 产品ID
	ProductType   string                 `protobuf:"bytes,4,opt,name=product_type,json=productType,proto3" json:"product_type,omitempty"`  // 产品类型
	Quantity      int32                  `protobuf:"varint,5,opt,name=quantity,proto3" json:"quantity,omitempty"`                          // 数量
	Amount        float64                `protobuf:"fixed64,6,opt,name=amount,proto3" json:"amount,omitempty"`                             // 金额
	Currency      string                 `protobuf:"bytes,7,opt,name=currency,proto3" json:"currency,omitempty"`                           // 货币类型
	Status        string                 `protobuf:"bytes,8,opt,name=status,proto3" json:"status,omitempty"`                               // 订单状态
	PaymentId     string                 `protobuf:"bytes,9,opt,name=payment_id,json=paymentId,proto3" json:"payment_id,omitempty"`        // 支付ID
	PaymentType   string                 `protobuf:"bytes,10,opt,name=payment_type,json=paymentType,proto3" json:"payment_type,omitempty"` // 支付类型
	PaymentTime   string                 `protobuf:"bytes,11,opt,name=payment_time,json=paymentTime,proto3" json:"payment_time,omitempty"` // 支付时间
	Description   string                 `protobuf:"bytes,12,opt,name=description,proto3" json:"description,omitempty"`                    // 描述
	Metadata      string                 `protobuf:"bytes,13,opt,name=metadata,proto3" json:"metadata,omitempty"`                          // 元数据，JSON格式
	CreatedAt     string                 `protobuf:"bytes,14,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`       // 创建时间
	UpdatedAt     string                 `protobuf:"bytes,15,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`       // 更新时间
	ExpireTime    string                 `protobuf:"bytes,16,opt,name=expire_time,json=expireTime,proto3" json:"expire_time,omitempty"`    // 过期时间
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Order) Reset() {
	*x = Order{}
	mi := &file_api_rpc_trade_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Order) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Order) ProtoMessage() {}

func (x *Order) ProtoReflect() protoreflect.Message {
	mi := &file_api_rpc_trade_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Order.ProtoReflect.Descriptor instead.
func (*Order) Descriptor() ([]byte, []int) {
	return file_api_rpc_trade_proto_rawDescGZIP(), []int{0}
}

func (x *Order) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *Order) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *Order) GetProductId() int64 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *Order) GetProductType() string {
	if x != nil {
		return x.ProductType
	}
	return ""
}

func (x *Order) GetQuantity() int32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *Order) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *Order) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *Order) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Order) GetPaymentId() string {
	if x != nil {
		return x.PaymentId
	}
	return ""
}

func (x *Order) GetPaymentType() string {
	if x != nil {
		return x.PaymentType
	}
	return ""
}

func (x *Order) GetPaymentTime() string {
	if x != nil {
		return x.PaymentTime
	}
	return ""
}

func (x *Order) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Order) GetMetadata() string {
	if x != nil {
		return x.Metadata
	}
	return ""
}

func (x *Order) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *Order) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *Order) GetExpireTime() string {
	if x != nil {
		return x.ExpireTime
	}
	return ""
}

type CreateOrderRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        int64                  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`               // 用户ID
	ProductId     int64                  `protobuf:"varint,2,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`      // 产品ID
	ProductType   string                 `protobuf:"bytes,3,opt,name=product_type,json=productType,proto3" json:"product_type,omitempty"` // 产品类型
	Quantity      int32                  `protobuf:"varint,4,opt,name=quantity,proto3" json:"quantity,omitempty"`                         // 数量
	Amount        float64                `protobuf:"fixed64,5,opt,name=amount,proto3" json:"amount,omitempty"`                            // 金额
	Currency      string                 `protobuf:"bytes,6,opt,name=currency,proto3" json:"currency,omitempty"`                          // 货币类型，默认CNY
	Description   string                 `protobuf:"bytes,7,opt,name=description,proto3" json:"description,omitempty"`                    // 描述
	Metadata      string                 `protobuf:"bytes,8,opt,name=metadata,proto3" json:"metadata,omitempty"`                          // 元数据，JSON格式
	ClientIp      string                 `protobuf:"bytes,9,opt,name=client_ip,json=clientIp,proto3" json:"client_ip,omitempty"`          // 客户端IP
	DeviceId      string                 `protobuf:"bytes,10,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`         // 设备ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateOrderRequest) Reset() {
	*x = CreateOrderRequest{}
	mi := &file_api_rpc_trade_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOrderRequest) ProtoMessage() {}

func (x *CreateOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_rpc_trade_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOrderRequest.ProtoReflect.Descriptor instead.
func (*CreateOrderRequest) Descriptor() ([]byte, []int) {
	return file_api_rpc_trade_proto_rawDescGZIP(), []int{1}
}

func (x *CreateOrderRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *CreateOrderRequest) GetProductId() int64 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *CreateOrderRequest) GetProductType() string {
	if x != nil {
		return x.ProductType
	}
	return ""
}

func (x *CreateOrderRequest) GetQuantity() int32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *CreateOrderRequest) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *CreateOrderRequest) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *CreateOrderRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateOrderRequest) GetMetadata() string {
	if x != nil {
		return x.Metadata
	}
	return ""
}

func (x *CreateOrderRequest) GetClientIp() string {
	if x != nil {
		return x.ClientIp
	}
	return ""
}

func (x *CreateOrderRequest) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

type CreateOrderResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OrderId       string                 `protobuf:"bytes,1,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`          // 订单ID
	Amount        float64                `protobuf:"fixed64,2,opt,name=amount,proto3" json:"amount,omitempty"`                         // 金额
	Currency      string                 `protobuf:"bytes,3,opt,name=currency,proto3" json:"currency,omitempty"`                       // 货币类型
	Status        string                 `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`                           // 订单状态
	CreatedAt     string                 `protobuf:"bytes,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`    // 创建时间
	ExpireTime    string                 `protobuf:"bytes,6,opt,name=expire_time,json=expireTime,proto3" json:"expire_time,omitempty"` // 过期时间
	PaymentUrl    string                 `protobuf:"bytes,7,opt,name=payment_url,json=paymentUrl,proto3" json:"payment_url,omitempty"` // 支付链接
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateOrderResponse) Reset() {
	*x = CreateOrderResponse{}
	mi := &file_api_rpc_trade_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateOrderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOrderResponse) ProtoMessage() {}

func (x *CreateOrderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_rpc_trade_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOrderResponse.ProtoReflect.Descriptor instead.
func (*CreateOrderResponse) Descriptor() ([]byte, []int) {
	return file_api_rpc_trade_proto_rawDescGZIP(), []int{2}
}

func (x *CreateOrderResponse) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *CreateOrderResponse) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *CreateOrderResponse) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *CreateOrderResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *CreateOrderResponse) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *CreateOrderResponse) GetExpireTime() string {
	if x != nil {
		return x.ExpireTime
	}
	return ""
}

func (x *CreateOrderResponse) GetPaymentUrl() string {
	if x != nil {
		return x.PaymentUrl
	}
	return ""
}

type GetOrderRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OrderId       string                 `protobuf:"bytes,1,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"` // 订单ID
	UserId        int64                  `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`   // 用户ID，用于权限验证
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetOrderRequest) Reset() {
	*x = GetOrderRequest{}
	mi := &file_api_rpc_trade_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrderRequest) ProtoMessage() {}

func (x *GetOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_rpc_trade_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrderRequest.ProtoReflect.Descriptor instead.
func (*GetOrderRequest) Descriptor() ([]byte, []int) {
	return file_api_rpc_trade_proto_rawDescGZIP(), []int{3}
}

func (x *GetOrderRequest) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *GetOrderRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type GetOrderResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Order         *Order                 `protobuf:"bytes,1,opt,name=order,proto3" json:"order,omitempty"` // 订单详情
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetOrderResponse) Reset() {
	*x = GetOrderResponse{}
	mi := &file_api_rpc_trade_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetOrderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrderResponse) ProtoMessage() {}

func (x *GetOrderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_rpc_trade_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrderResponse.ProtoReflect.Descriptor instead.
func (*GetOrderResponse) Descriptor() ([]byte, []int) {
	return file_api_rpc_trade_proto_rawDescGZIP(), []int{4}
}

func (x *GetOrderResponse) GetOrder() *Order {
	if x != nil {
		return x.Order
	}
	return nil
}

type ListOrdersRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        int64                  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`               // 用户ID
	Status        string                 `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`                              // 订单状态
	StartTime     string                 `protobuf:"bytes,3,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`       // 开始时间
	EndTime       string                 `protobuf:"bytes,4,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`             // 结束时间
	ProductType   string                 `protobuf:"bytes,5,opt,name=product_type,json=productType,proto3" json:"product_type,omitempty"` // 产品类型
	Page          int32                  `protobuf:"varint,6,opt,name=page,proto3" json:"page,omitempty"`                                 // 页码
	PageSize      int32                  `protobuf:"varint,7,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`         // 每页数量
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListOrdersRequest) Reset() {
	*x = ListOrdersRequest{}
	mi := &file_api_rpc_trade_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListOrdersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOrdersRequest) ProtoMessage() {}

func (x *ListOrdersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_rpc_trade_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOrdersRequest.ProtoReflect.Descriptor instead.
func (*ListOrdersRequest) Descriptor() ([]byte, []int) {
	return file_api_rpc_trade_proto_rawDescGZIP(), []int{5}
}

func (x *ListOrdersRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *ListOrdersRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ListOrdersRequest) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *ListOrdersRequest) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

func (x *ListOrdersRequest) GetProductType() string {
	if x != nil {
		return x.ProductType
	}
	return ""
}

func (x *ListOrdersRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListOrdersRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type ListOrdersResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Total         int32                  `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`  // 总数
	Page          int32                  `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`    // 当前页
	Size          int32                  `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`    // 每页数量
	Orders        []*Order               `protobuf:"bytes,4,rep,name=orders,proto3" json:"orders,omitempty"` // 订单列表
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListOrdersResponse) Reset() {
	*x = ListOrdersResponse{}
	mi := &file_api_rpc_trade_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListOrdersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOrdersResponse) ProtoMessage() {}

func (x *ListOrdersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_rpc_trade_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOrdersResponse.ProtoReflect.Descriptor instead.
func (*ListOrdersResponse) Descriptor() ([]byte, []int) {
	return file_api_rpc_trade_proto_rawDescGZIP(), []int{6}
}

func (x *ListOrdersResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListOrdersResponse) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListOrdersResponse) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *ListOrdersResponse) GetOrders() []*Order {
	if x != nil {
		return x.Orders
	}
	return nil
}

type CancelOrderRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OrderId       string                 `protobuf:"bytes,1,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"` // 订单ID
	UserId        int64                  `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`   // 用户ID，用于权限验证
	Reason        string                 `protobuf:"bytes,3,opt,name=reason,proto3" json:"reason,omitempty"`                  // 取消原因
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CancelOrderRequest) Reset() {
	*x = CancelOrderRequest{}
	mi := &file_api_rpc_trade_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CancelOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelOrderRequest) ProtoMessage() {}

func (x *CancelOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_rpc_trade_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelOrderRequest.ProtoReflect.Descriptor instead.
func (*CancelOrderRequest) Descriptor() ([]byte, []int) {
	return file_api_rpc_trade_proto_rawDescGZIP(), []int{7}
}

func (x *CancelOrderRequest) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *CancelOrderRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *CancelOrderRequest) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

type CancelOrderResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`               // 是否成功
	OrderId       string                 `protobuf:"bytes,2,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"` // 订单ID
	Status        string                 `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`                  // 订单状态
	Message       string                 `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`                // 消息
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CancelOrderResponse) Reset() {
	*x = CancelOrderResponse{}
	mi := &file_api_rpc_trade_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CancelOrderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelOrderResponse) ProtoMessage() {}

func (x *CancelOrderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_rpc_trade_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelOrderResponse.ProtoReflect.Descriptor instead.
func (*CancelOrderResponse) Descriptor() ([]byte, []int) {
	return file_api_rpc_trade_proto_rawDescGZIP(), []int{8}
}

func (x *CancelOrderResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *CancelOrderResponse) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *CancelOrderResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *CancelOrderResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type UpdateOrderStatusRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OrderId       string                 `protobuf:"bytes,1,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`          // 订单ID
	Status        string                 `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`                           // 新状态
	OperatorId    string                 `protobuf:"bytes,3,opt,name=operator_id,json=operatorId,proto3" json:"operator_id,omitempty"` // 操作员ID
	Reason        string                 `protobuf:"bytes,4,opt,name=reason,proto3" json:"reason,omitempty"`                           // 原因
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateOrderStatusRequest) Reset() {
	*x = UpdateOrderStatusRequest{}
	mi := &file_api_rpc_trade_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateOrderStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateOrderStatusRequest) ProtoMessage() {}

func (x *UpdateOrderStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_rpc_trade_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateOrderStatusRequest.ProtoReflect.Descriptor instead.
func (*UpdateOrderStatusRequest) Descriptor() ([]byte, []int) {
	return file_api_rpc_trade_proto_rawDescGZIP(), []int{9}
}

func (x *UpdateOrderStatusRequest) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *UpdateOrderStatusRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *UpdateOrderStatusRequest) GetOperatorId() string {
	if x != nil {
		return x.OperatorId
	}
	return ""
}

func (x *UpdateOrderStatusRequest) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

type UpdateOrderStatusResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`               // 是否成功
	OrderId       string                 `protobuf:"bytes,2,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"` // 订单ID
	Status        string                 `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`                  // 更新后的状态
	Message       string                 `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`                // 消息
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateOrderStatusResponse) Reset() {
	*x = UpdateOrderStatusResponse{}
	mi := &file_api_rpc_trade_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateOrderStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateOrderStatusResponse) ProtoMessage() {}

func (x *UpdateOrderStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_rpc_trade_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateOrderStatusResponse.ProtoReflect.Descriptor instead.
func (*UpdateOrderStatusResponse) Descriptor() ([]byte, []int) {
	return file_api_rpc_trade_proto_rawDescGZIP(), []int{10}
}

func (x *UpdateOrderStatusResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *UpdateOrderStatusResponse) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *UpdateOrderStatusResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *UpdateOrderStatusResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// 支付相关消息
type ProcessPaymentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OrderId       string                 `protobuf:"bytes,1,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`             // 订单ID
	PaymentType   string                 `protobuf:"bytes,2,opt,name=payment_type,json=paymentType,proto3" json:"payment_type,omitempty"` // 支付类型: alipay, wechat, bank_transfer
	Amount        float64                `protobuf:"fixed64,3,opt,name=amount,proto3" json:"amount,omitempty"`                            // 金额
	Currency      string                 `protobuf:"bytes,4,opt,name=currency,proto3" json:"currency,omitempty"`                          // 货币类型
	ReturnUrl     string                 `protobuf:"bytes,5,opt,name=return_url,json=returnUrl,proto3" json:"return_url,omitempty"`       // 支付完成后的返回URL
	NotifyUrl     string                 `protobuf:"bytes,6,opt,name=notify_url,json=notifyUrl,proto3" json:"notify_url,omitempty"`       // 支付回调通知URL
	ClientIp      string                 `protobuf:"bytes,7,opt,name=client_ip,json=clientIp,proto3" json:"client_ip,omitempty"`          // 客户端IP
	Metadata      string                 `protobuf:"bytes,8,opt,name=metadata,proto3" json:"metadata,omitempty"`                          // 元数据，JSON格式
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProcessPaymentRequest) Reset() {
	*x = ProcessPaymentRequest{}
	mi := &file_api_rpc_trade_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProcessPaymentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessPaymentRequest) ProtoMessage() {}

func (x *ProcessPaymentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_rpc_trade_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessPaymentRequest.ProtoReflect.Descriptor instead.
func (*ProcessPaymentRequest) Descriptor() ([]byte, []int) {
	return file_api_rpc_trade_proto_rawDescGZIP(), []int{11}
}

func (x *ProcessPaymentRequest) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *ProcessPaymentRequest) GetPaymentType() string {
	if x != nil {
		return x.PaymentType
	}
	return ""
}

func (x *ProcessPaymentRequest) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *ProcessPaymentRequest) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *ProcessPaymentRequest) GetReturnUrl() string {
	if x != nil {
		return x.ReturnUrl
	}
	return ""
}

func (x *ProcessPaymentRequest) GetNotifyUrl() string {
	if x != nil {
		return x.NotifyUrl
	}
	return ""
}

func (x *ProcessPaymentRequest) GetClientIp() string {
	if x != nil {
		return x.ClientIp
	}
	return ""
}

func (x *ProcessPaymentRequest) GetMetadata() string {
	if x != nil {
		return x.Metadata
	}
	return ""
}

type ProcessPaymentResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`                        // 是否成功
	PaymentId     string                 `protobuf:"bytes,2,opt,name=payment_id,json=paymentId,proto3" json:"payment_id,omitempty"`    // 支付ID
	OrderId       string                 `protobuf:"bytes,3,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`          // 订单ID
	PaymentUrl    string                 `protobuf:"bytes,4,opt,name=payment_url,json=paymentUrl,proto3" json:"payment_url,omitempty"` // 支付URL
	QrCode        string                 `protobuf:"bytes,5,opt,name=qr_code,json=qrCode,proto3" json:"qr_code,omitempty"`             // 二维码内容
	Status        string                 `protobuf:"bytes,6,opt,name=status,proto3" json:"status,omitempty"`                           // 支付状态
	Message       string                 `protobuf:"bytes,7,opt,name=message,proto3" json:"message,omitempty"`                         // 消息
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProcessPaymentResponse) Reset() {
	*x = ProcessPaymentResponse{}
	mi := &file_api_rpc_trade_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProcessPaymentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessPaymentResponse) ProtoMessage() {}

func (x *ProcessPaymentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_rpc_trade_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessPaymentResponse.ProtoReflect.Descriptor instead.
func (*ProcessPaymentResponse) Descriptor() ([]byte, []int) {
	return file_api_rpc_trade_proto_rawDescGZIP(), []int{12}
}

func (x *ProcessPaymentResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ProcessPaymentResponse) GetPaymentId() string {
	if x != nil {
		return x.PaymentId
	}
	return ""
}

func (x *ProcessPaymentResponse) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *ProcessPaymentResponse) GetPaymentUrl() string {
	if x != nil {
		return x.PaymentUrl
	}
	return ""
}

func (x *ProcessPaymentResponse) GetQrCode() string {
	if x != nil {
		return x.QrCode
	}
	return ""
}

func (x *ProcessPaymentResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ProcessPaymentResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type PaymentCallbackRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PaymentId     string                 `protobuf:"bytes,1,opt,name=payment_id,json=paymentId,proto3" json:"payment_id,omitempty"`              // 支付ID
	OrderId       string                 `protobuf:"bytes,2,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`                    // 订单ID
	Amount        float64                `protobuf:"fixed64,3,opt,name=amount,proto3" json:"amount,omitempty"`                                   // 金额
	Currency      string                 `protobuf:"bytes,4,opt,name=currency,proto3" json:"currency,omitempty"`                                 // 货币类型
	Status        string                 `protobuf:"bytes,5,opt,name=status,proto3" json:"status,omitempty"`                                     // 支付状态
	PaymentType   string                 `protobuf:"bytes,6,opt,name=payment_type,json=paymentType,proto3" json:"payment_type,omitempty"`        // 支付类型
	PaymentTime   string                 `protobuf:"bytes,7,opt,name=payment_time,json=paymentTime,proto3" json:"payment_time,omitempty"`        // 支付时间
	Signature     string                 `protobuf:"bytes,8,opt,name=signature,proto3" json:"signature,omitempty"`                               // 签名
	RawData       string                 `protobuf:"bytes,9,opt,name=raw_data,json=rawData,proto3" json:"raw_data,omitempty"`                    // 原始数据
	TransactionId string                 `protobuf:"bytes,10,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"` // 第三方交易ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PaymentCallbackRequest) Reset() {
	*x = PaymentCallbackRequest{}
	mi := &file_api_rpc_trade_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PaymentCallbackRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentCallbackRequest) ProtoMessage() {}

func (x *PaymentCallbackRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_rpc_trade_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentCallbackRequest.ProtoReflect.Descriptor instead.
func (*PaymentCallbackRequest) Descriptor() ([]byte, []int) {
	return file_api_rpc_trade_proto_rawDescGZIP(), []int{13}
}

func (x *PaymentCallbackRequest) GetPaymentId() string {
	if x != nil {
		return x.PaymentId
	}
	return ""
}

func (x *PaymentCallbackRequest) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *PaymentCallbackRequest) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *PaymentCallbackRequest) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *PaymentCallbackRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *PaymentCallbackRequest) GetPaymentType() string {
	if x != nil {
		return x.PaymentType
	}
	return ""
}

func (x *PaymentCallbackRequest) GetPaymentTime() string {
	if x != nil {
		return x.PaymentTime
	}
	return ""
}

func (x *PaymentCallbackRequest) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *PaymentCallbackRequest) GetRawData() string {
	if x != nil {
		return x.RawData
	}
	return ""
}

func (x *PaymentCallbackRequest) GetTransactionId() string {
	if x != nil {
		return x.TransactionId
	}
	return ""
}

type PaymentCallbackResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"` // 是否成功
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`  // 消息
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PaymentCallbackResponse) Reset() {
	*x = PaymentCallbackResponse{}
	mi := &file_api_rpc_trade_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PaymentCallbackResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentCallbackResponse) ProtoMessage() {}

func (x *PaymentCallbackResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_rpc_trade_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentCallbackResponse.ProtoReflect.Descriptor instead.
func (*PaymentCallbackResponse) Descriptor() ([]byte, []int) {
	return file_api_rpc_trade_proto_rawDescGZIP(), []int{14}
}

func (x *PaymentCallbackResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *PaymentCallbackResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// 退款相关消息
type Refund struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	RefundId            string                 `protobuf:"bytes,1,opt,name=refund_id,json=refundId,proto3" json:"refund_id,omitempty"`                                     // 退款ID
	OrderId             string                 `protobuf:"bytes,2,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`                                        // 订单ID
	UserId              int64                  `protobuf:"varint,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                                          // 用户ID
	Amount              float64                `protobuf:"fixed64,4,opt,name=amount,proto3" json:"amount,omitempty"`                                                       // 退款金额
	Currency            string                 `protobuf:"bytes,5,opt,name=currency,proto3" json:"currency,omitempty"`                                                     // 货币类型
	Status              string                 `protobuf:"bytes,6,opt,name=status,proto3" json:"status,omitempty"`                                                         // 退款状态
	Reason              string                 `protobuf:"bytes,7,opt,name=reason,proto3" json:"reason,omitempty"`                                                         // 退款原因
	Description         string                 `protobuf:"bytes,8,opt,name=description,proto3" json:"description,omitempty"`                                               // 描述
	ProcessedBy         string                 `protobuf:"bytes,9,opt,name=processed_by,json=processedBy,proto3" json:"processed_by,omitempty"`                            // 处理人
	ProcessTime         string                 `protobuf:"bytes,10,opt,name=process_time,json=processTime,proto3" json:"process_time,omitempty"`                           // 处理时间
	CreatedAt           string                 `protobuf:"bytes,11,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`                                 // 创建时间
	UpdatedAt           string                 `protobuf:"bytes,12,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`                                 // 更新时间
	RefundTransactionId string                 `protobuf:"bytes,13,opt,name=refund_transaction_id,json=refundTransactionId,proto3" json:"refund_transaction_id,omitempty"` // 退款交易ID
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *Refund) Reset() {
	*x = Refund{}
	mi := &file_api_rpc_trade_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Refund) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Refund) ProtoMessage() {}

func (x *Refund) ProtoReflect() protoreflect.Message {
	mi := &file_api_rpc_trade_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Refund.ProtoReflect.Descriptor instead.
func (*Refund) Descriptor() ([]byte, []int) {
	return file_api_rpc_trade_proto_rawDescGZIP(), []int{15}
}

func (x *Refund) GetRefundId() string {
	if x != nil {
		return x.RefundId
	}
	return ""
}

func (x *Refund) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *Refund) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *Refund) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *Refund) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *Refund) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Refund) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *Refund) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Refund) GetProcessedBy() string {
	if x != nil {
		return x.ProcessedBy
	}
	return ""
}

func (x *Refund) GetProcessTime() string {
	if x != nil {
		return x.ProcessTime
	}
	return ""
}

func (x *Refund) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *Refund) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *Refund) GetRefundTransactionId() string {
	if x != nil {
		return x.RefundTransactionId
	}
	return ""
}

type CreateRefundRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OrderId       string                 `protobuf:"bytes,1,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"` // 订单ID
	UserId        int64                  `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`   // 用户ID
	Amount        float64                `protobuf:"fixed64,3,opt,name=amount,proto3" json:"amount,omitempty"`                // 退款金额
	Reason        string                 `protobuf:"bytes,4,opt,name=reason,proto3" json:"reason,omitempty"`                  // 退款原因
	Description   string                 `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`        // 描述
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateRefundRequest) Reset() {
	*x = CreateRefundRequest{}
	mi := &file_api_rpc_trade_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateRefundRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRefundRequest) ProtoMessage() {}

func (x *CreateRefundRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_rpc_trade_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRefundRequest.ProtoReflect.Descriptor instead.
func (*CreateRefundRequest) Descriptor() ([]byte, []int) {
	return file_api_rpc_trade_proto_rawDescGZIP(), []int{16}
}

func (x *CreateRefundRequest) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *CreateRefundRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *CreateRefundRequest) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *CreateRefundRequest) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *CreateRefundRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type CreateRefundResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RefundId      string                 `protobuf:"bytes,1,opt,name=refund_id,json=refundId,proto3" json:"refund_id,omitempty"`    // 退款ID
	OrderId       string                 `protobuf:"bytes,2,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`       // 订单ID
	Amount        float64                `protobuf:"fixed64,3,opt,name=amount,proto3" json:"amount,omitempty"`                      // 退款金额
	Status        string                 `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`                        // 退款状态
	CreatedAt     string                 `protobuf:"bytes,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"` // 创建时间
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateRefundResponse) Reset() {
	*x = CreateRefundResponse{}
	mi := &file_api_rpc_trade_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateRefundResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRefundResponse) ProtoMessage() {}

func (x *CreateRefundResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_rpc_trade_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRefundResponse.ProtoReflect.Descriptor instead.
func (*CreateRefundResponse) Descriptor() ([]byte, []int) {
	return file_api_rpc_trade_proto_rawDescGZIP(), []int{17}
}

func (x *CreateRefundResponse) GetRefundId() string {
	if x != nil {
		return x.RefundId
	}
	return ""
}

func (x *CreateRefundResponse) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *CreateRefundResponse) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *CreateRefundResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *CreateRefundResponse) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

type GetRefundRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RefundId      string                 `protobuf:"bytes,1,opt,name=refund_id,json=refundId,proto3" json:"refund_id,omitempty"` // 退款ID
	UserId        int64                  `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`      // 用户ID，用于权限验证
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRefundRequest) Reset() {
	*x = GetRefundRequest{}
	mi := &file_api_rpc_trade_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRefundRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRefundRequest) ProtoMessage() {}

func (x *GetRefundRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_rpc_trade_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRefundRequest.ProtoReflect.Descriptor instead.
func (*GetRefundRequest) Descriptor() ([]byte, []int) {
	return file_api_rpc_trade_proto_rawDescGZIP(), []int{18}
}

func (x *GetRefundRequest) GetRefundId() string {
	if x != nil {
		return x.RefundId
	}
	return ""
}

func (x *GetRefundRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type GetRefundResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Refund        *Refund                `protobuf:"bytes,1,opt,name=refund,proto3" json:"refund,omitempty"` // 退款详情
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRefundResponse) Reset() {
	*x = GetRefundResponse{}
	mi := &file_api_rpc_trade_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRefundResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRefundResponse) ProtoMessage() {}

func (x *GetRefundResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_rpc_trade_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRefundResponse.ProtoReflect.Descriptor instead.
func (*GetRefundResponse) Descriptor() ([]byte, []int) {
	return file_api_rpc_trade_proto_rawDescGZIP(), []int{19}
}

func (x *GetRefundResponse) GetRefund() *Refund {
	if x != nil {
		return x.Refund
	}
	return nil
}

type ListRefundsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        int64                  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`         // 用户ID
	OrderId       string                 `protobuf:"bytes,2,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`       // 订单ID
	Status        string                 `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`                        // 退款状态
	StartTime     string                 `protobuf:"bytes,4,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"` // 开始时间
	EndTime       string                 `protobuf:"bytes,5,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`       // 结束时间
	Page          int32                  `protobuf:"varint,6,opt,name=page,proto3" json:"page,omitempty"`                           // 页码
	PageSize      int32                  `protobuf:"varint,7,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`   // 每页数量
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListRefundsRequest) Reset() {
	*x = ListRefundsRequest{}
	mi := &file_api_rpc_trade_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListRefundsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRefundsRequest) ProtoMessage() {}

func (x *ListRefundsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_rpc_trade_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRefundsRequest.ProtoReflect.Descriptor instead.
func (*ListRefundsRequest) Descriptor() ([]byte, []int) {
	return file_api_rpc_trade_proto_rawDescGZIP(), []int{20}
}

func (x *ListRefundsRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *ListRefundsRequest) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *ListRefundsRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ListRefundsRequest) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *ListRefundsRequest) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

func (x *ListRefundsRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListRefundsRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type ListRefundsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Total         int32                  `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`    // 总数
	Page          int32                  `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`      // 当前页
	Size          int32                  `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`      // 每页数量
	Refunds       []*Refund              `protobuf:"bytes,4,rep,name=refunds,proto3" json:"refunds,omitempty"` // 退款列表
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListRefundsResponse) Reset() {
	*x = ListRefundsResponse{}
	mi := &file_api_rpc_trade_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListRefundsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRefundsResponse) ProtoMessage() {}

func (x *ListRefundsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_rpc_trade_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRefundsResponse.ProtoReflect.Descriptor instead.
func (*ListRefundsResponse) Descriptor() ([]byte, []int) {
	return file_api_rpc_trade_proto_rawDescGZIP(), []int{21}
}

func (x *ListRefundsResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListRefundsResponse) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListRefundsResponse) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *ListRefundsResponse) GetRefunds() []*Refund {
	if x != nil {
		return x.Refunds
	}
	return nil
}

type ProcessRefundRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RefundId      string                 `protobuf:"bytes,1,opt,name=refund_id,json=refundId,proto3" json:"refund_id,omitempty"`          // 退款ID
	Action        string                 `protobuf:"bytes,2,opt,name=action,proto3" json:"action,omitempty"`                              // 操作：approve, reject
	Comment       string                 `protobuf:"bytes,3,opt,name=comment,proto3" json:"comment,omitempty"`                            // 备注
	ProcessedBy   string                 `protobuf:"bytes,4,opt,name=processed_by,json=processedBy,proto3" json:"processed_by,omitempty"` // 处理人
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProcessRefundRequest) Reset() {
	*x = ProcessRefundRequest{}
	mi := &file_api_rpc_trade_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProcessRefundRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessRefundRequest) ProtoMessage() {}

func (x *ProcessRefundRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_rpc_trade_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessRefundRequest.ProtoReflect.Descriptor instead.
func (*ProcessRefundRequest) Descriptor() ([]byte, []int) {
	return file_api_rpc_trade_proto_rawDescGZIP(), []int{22}
}

func (x *ProcessRefundRequest) GetRefundId() string {
	if x != nil {
		return x.RefundId
	}
	return ""
}

func (x *ProcessRefundRequest) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

func (x *ProcessRefundRequest) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *ProcessRefundRequest) GetProcessedBy() string {
	if x != nil {
		return x.ProcessedBy
	}
	return ""
}

type ProcessRefundResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`                  // 是否成功
	RefundId      string                 `protobuf:"bytes,2,opt,name=refund_id,json=refundId,proto3" json:"refund_id,omitempty"` // 退款ID
	Status        string                 `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`                     // 退款状态
	Message       string                 `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`                   // 消息
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProcessRefundResponse) Reset() {
	*x = ProcessRefundResponse{}
	mi := &file_api_rpc_trade_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProcessRefundResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessRefundResponse) ProtoMessage() {}

func (x *ProcessRefundResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_rpc_trade_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessRefundResponse.ProtoReflect.Descriptor instead.
func (*ProcessRefundResponse) Descriptor() ([]byte, []int) {
	return file_api_rpc_trade_proto_rawDescGZIP(), []int{23}
}

func (x *ProcessRefundResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ProcessRefundResponse) GetRefundId() string {
	if x != nil {
		return x.RefundId
	}
	return ""
}

func (x *ProcessRefundResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ProcessRefundResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// 账户相关消息
type BalanceItem struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Currency      string                 `protobuf:"bytes,1,opt,name=currency,proto3" json:"currency,omitempty"`     // 货币类型
	Available     float64                `protobuf:"fixed64,2,opt,name=available,proto3" json:"available,omitempty"` // 可用余额
	Pending       float64                `protobuf:"fixed64,3,opt,name=pending,proto3" json:"pending,omitempty"`     // 待结算余额
	Frozen        float64                `protobuf:"fixed64,4,opt,name=frozen,proto3" json:"frozen,omitempty"`       // 冻结余额
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BalanceItem) Reset() {
	*x = BalanceItem{}
	mi := &file_api_rpc_trade_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BalanceItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BalanceItem) ProtoMessage() {}

func (x *BalanceItem) ProtoReflect() protoreflect.Message {
	mi := &file_api_rpc_trade_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BalanceItem.ProtoReflect.Descriptor instead.
func (*BalanceItem) Descriptor() ([]byte, []int) {
	return file_api_rpc_trade_proto_rawDescGZIP(), []int{24}
}

func (x *BalanceItem) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *BalanceItem) GetAvailable() float64 {
	if x != nil {
		return x.Available
	}
	return 0
}

func (x *BalanceItem) GetPending() float64 {
	if x != nil {
		return x.Pending
	}
	return 0
}

func (x *BalanceItem) GetFrozen() float64 {
	if x != nil {
		return x.Frozen
	}
	return 0
}

type GetBalanceRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        int64                  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` // 用户ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetBalanceRequest) Reset() {
	*x = GetBalanceRequest{}
	mi := &file_api_rpc_trade_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBalanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBalanceRequest) ProtoMessage() {}

func (x *GetBalanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_rpc_trade_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBalanceRequest.ProtoReflect.Descriptor instead.
func (*GetBalanceRequest) Descriptor() ([]byte, []int) {
	return file_api_rpc_trade_proto_rawDescGZIP(), []int{25}
}

func (x *GetBalanceRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type GetBalanceResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        int64                  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`         // 用户ID
	Balances      []*BalanceItem         `protobuf:"bytes,2,rep,name=balances,proto3" json:"balances,omitempty"`                    // 余额列表
	UpdatedAt     string                 `protobuf:"bytes,3,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"` // 更新时间
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetBalanceResponse) Reset() {
	*x = GetBalanceResponse{}
	mi := &file_api_rpc_trade_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBalanceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBalanceResponse) ProtoMessage() {}

func (x *GetBalanceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_rpc_trade_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBalanceResponse.ProtoReflect.Descriptor instead.
func (*GetBalanceResponse) Descriptor() ([]byte, []int) {
	return file_api_rpc_trade_proto_rawDescGZIP(), []int{26}
}

func (x *GetBalanceResponse) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *GetBalanceResponse) GetBalances() []*BalanceItem {
	if x != nil {
		return x.Balances
	}
	return nil
}

func (x *GetBalanceResponse) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

type TransactionItem struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TransactionId string                 `protobuf:"bytes,1,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"` // 交易ID
	UserId        int64                  `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                     // 用户ID
	RelatedId     string                 `protobuf:"bytes,3,opt,name=related_id,json=relatedId,proto3" json:"related_id,omitempty"`             // 关联ID（订单ID或退款ID）
	Type          string                 `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`                                        // 交易类型：payment, refund, withdraw, adjustment
	Amount        float64                `protobuf:"fixed64,5,opt,name=amount,proto3" json:"amount,omitempty"`                                  // 金额
	Currency      string                 `protobuf:"bytes,6,opt,name=currency,proto3" json:"currency,omitempty"`                                // 货币类型
	Status        string                 `protobuf:"bytes,7,opt,name=status,proto3" json:"status,omitempty"`                                    // 交易状态
	Description   string                 `protobuf:"bytes,8,opt,name=description,proto3" json:"description,omitempty"`                          // 描述
	Metadata      string                 `protobuf:"bytes,9,opt,name=metadata,proto3" json:"metadata,omitempty"`                                // 元数据，JSON格式
	CreatedAt     string                 `protobuf:"bytes,10,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`            // 创建时间
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TransactionItem) Reset() {
	*x = TransactionItem{}
	mi := &file_api_rpc_trade_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TransactionItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionItem) ProtoMessage() {}

func (x *TransactionItem) ProtoReflect() protoreflect.Message {
	mi := &file_api_rpc_trade_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionItem.ProtoReflect.Descriptor instead.
func (*TransactionItem) Descriptor() ([]byte, []int) {
	return file_api_rpc_trade_proto_rawDescGZIP(), []int{27}
}

func (x *TransactionItem) GetTransactionId() string {
	if x != nil {
		return x.TransactionId
	}
	return ""
}

func (x *TransactionItem) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *TransactionItem) GetRelatedId() string {
	if x != nil {
		return x.RelatedId
	}
	return ""
}

func (x *TransactionItem) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *TransactionItem) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *TransactionItem) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *TransactionItem) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *TransactionItem) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *TransactionItem) GetMetadata() string {
	if x != nil {
		return x.Metadata
	}
	return ""
}

func (x *TransactionItem) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

type GetTransactionsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        int64                  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`         // 用户ID
	Type          string                 `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`                            // 交易类型
	Status        string                 `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`                        // 交易状态
	StartTime     string                 `protobuf:"bytes,4,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"` // 开始时间
	EndTime       string                 `protobuf:"bytes,5,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`       // 结束时间
	Page          int32                  `protobuf:"varint,6,opt,name=page,proto3" json:"page,omitempty"`                           // 页码
	PageSize      int32                  `protobuf:"varint,7,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`   // 每页数量
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTransactionsRequest) Reset() {
	*x = GetTransactionsRequest{}
	mi := &file_api_rpc_trade_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTransactionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTransactionsRequest) ProtoMessage() {}

func (x *GetTransactionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_rpc_trade_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTransactionsRequest.ProtoReflect.Descriptor instead.
func (*GetTransactionsRequest) Descriptor() ([]byte, []int) {
	return file_api_rpc_trade_proto_rawDescGZIP(), []int{28}
}

func (x *GetTransactionsRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *GetTransactionsRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *GetTransactionsRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *GetTransactionsRequest) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *GetTransactionsRequest) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

func (x *GetTransactionsRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetTransactionsRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type GetTransactionsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Total         int32                  `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`              // 总数
	Page          int32                  `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`                // 当前页
	Size          int32                  `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`                // 每页数量
	Transactions  []*TransactionItem     `protobuf:"bytes,4,rep,name=transactions,proto3" json:"transactions,omitempty"` // 交易记录
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTransactionsResponse) Reset() {
	*x = GetTransactionsResponse{}
	mi := &file_api_rpc_trade_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTransactionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTransactionsResponse) ProtoMessage() {}

func (x *GetTransactionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_rpc_trade_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTransactionsResponse.ProtoReflect.Descriptor instead.
func (*GetTransactionsResponse) Descriptor() ([]byte, []int) {
	return file_api_rpc_trade_proto_rawDescGZIP(), []int{29}
}

func (x *GetTransactionsResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *GetTransactionsResponse) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetTransactionsResponse) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *GetTransactionsResponse) GetTransactions() []*TransactionItem {
	if x != nil {
		return x.Transactions
	}
	return nil
}

// 报表相关消息
type ReportDataPoint struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Date          string                 `protobuf:"bytes,1,opt,name=date,proto3" json:"date,omitempty"`                                // 日期
	Income        float64                `protobuf:"fixed64,2,opt,name=income,proto3" json:"income,omitempty"`                          // 收入
	Refund        float64                `protobuf:"fixed64,3,opt,name=refund,proto3" json:"refund,omitempty"`                          // 退款
	Net           float64                `protobuf:"fixed64,4,opt,name=net,proto3" json:"net,omitempty"`                                // 净收入
	OrderCount    int32                  `protobuf:"varint,5,opt,name=order_count,json=orderCount,proto3" json:"order_count,omitempty"` // 订单数
	UserCount     int32                  `protobuf:"varint,6,opt,name=user_count,json=userCount,proto3" json:"user_count,omitempty"`    // 用户数
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReportDataPoint) Reset() {
	*x = ReportDataPoint{}
	mi := &file_api_rpc_trade_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReportDataPoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportDataPoint) ProtoMessage() {}

func (x *ReportDataPoint) ProtoReflect() protoreflect.Message {
	mi := &file_api_rpc_trade_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportDataPoint.ProtoReflect.Descriptor instead.
func (*ReportDataPoint) Descriptor() ([]byte, []int) {
	return file_api_rpc_trade_proto_rawDescGZIP(), []int{30}
}

func (x *ReportDataPoint) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *ReportDataPoint) GetIncome() float64 {
	if x != nil {
		return x.Income
	}
	return 0
}

func (x *ReportDataPoint) GetRefund() float64 {
	if x != nil {
		return x.Refund
	}
	return 0
}

func (x *ReportDataPoint) GetNet() float64 {
	if x != nil {
		return x.Net
	}
	return 0
}

func (x *ReportDataPoint) GetOrderCount() int32 {
	if x != nil {
		return x.OrderCount
	}
	return 0
}

func (x *ReportDataPoint) GetUserCount() int32 {
	if x != nil {
		return x.UserCount
	}
	return 0
}

type GetFinancialReportRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StartTime     string                 `protobuf:"bytes,1,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"` // 开始时间
	EndTime       string                 `protobuf:"bytes,2,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`       // 结束时间
	Type          string                 `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`                            // 报表类型：daily, weekly, monthly
	Currency      string                 `protobuf:"bytes,4,opt,name=currency,proto3" json:"currency,omitempty"`                    // 货币类型
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetFinancialReportRequest) Reset() {
	*x = GetFinancialReportRequest{}
	mi := &file_api_rpc_trade_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetFinancialReportRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFinancialReportRequest) ProtoMessage() {}

func (x *GetFinancialReportRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_rpc_trade_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFinancialReportRequest.ProtoReflect.Descriptor instead.
func (*GetFinancialReportRequest) Descriptor() ([]byte, []int) {
	return file_api_rpc_trade_proto_rawDescGZIP(), []int{31}
}

func (x *GetFinancialReportRequest) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *GetFinancialReportRequest) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

func (x *GetFinancialReportRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *GetFinancialReportRequest) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

type GetFinancialReportResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StartTime     string                 `protobuf:"bytes,1,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`         // 开始时间
	EndTime       string                 `protobuf:"bytes,2,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`               // 结束时间
	Currency      string                 `protobuf:"bytes,3,opt,name=currency,proto3" json:"currency,omitempty"`                            // 货币类型
	TotalIncome   float64                `protobuf:"fixed64,4,opt,name=total_income,json=totalIncome,proto3" json:"total_income,omitempty"` // 总收入
	TotalRefund   float64                `protobuf:"fixed64,5,opt,name=total_refund,json=totalRefund,proto3" json:"total_refund,omitempty"` // 总退款
	TotalNet      float64                `protobuf:"fixed64,6,opt,name=total_net,json=totalNet,proto3" json:"total_net,omitempty"`          // 总净收入
	OrderCount    int32                  `protobuf:"varint,7,opt,name=order_count,json=orderCount,proto3" json:"order_count,omitempty"`     // 订单数
	UserCount     int32                  `protobuf:"varint,8,opt,name=user_count,json=userCount,proto3" json:"user_count,omitempty"`        // 用户数
	DataPoints    []*ReportDataPoint     `protobuf:"bytes,9,rep,name=data_points,json=dataPoints,proto3" json:"data_points,omitempty"`      // 数据点
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetFinancialReportResponse) Reset() {
	*x = GetFinancialReportResponse{}
	mi := &file_api_rpc_trade_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetFinancialReportResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFinancialReportResponse) ProtoMessage() {}

func (x *GetFinancialReportResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_rpc_trade_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFinancialReportResponse.ProtoReflect.Descriptor instead.
func (*GetFinancialReportResponse) Descriptor() ([]byte, []int) {
	return file_api_rpc_trade_proto_rawDescGZIP(), []int{32}
}

func (x *GetFinancialReportResponse) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *GetFinancialReportResponse) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

func (x *GetFinancialReportResponse) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *GetFinancialReportResponse) GetTotalIncome() float64 {
	if x != nil {
		return x.TotalIncome
	}
	return 0
}

func (x *GetFinancialReportResponse) GetTotalRefund() float64 {
	if x != nil {
		return x.TotalRefund
	}
	return 0
}

func (x *GetFinancialReportResponse) GetTotalNet() float64 {
	if x != nil {
		return x.TotalNet
	}
	return 0
}

func (x *GetFinancialReportResponse) GetOrderCount() int32 {
	if x != nil {
		return x.OrderCount
	}
	return 0
}

func (x *GetFinancialReportResponse) GetUserCount() int32 {
	if x != nil {
		return x.UserCount
	}
	return 0
}

func (x *GetFinancialReportResponse) GetDataPoints() []*ReportDataPoint {
	if x != nil {
		return x.DataPoints
	}
	return nil
}

var File_api_rpc_trade_proto protoreflect.FileDescriptor

const file_api_rpc_trade_proto_rawDesc = "" +
	"\n" +
	"\x13api/rpc/trade.proto\x12\x05trade\"\xe7\x03\n" +
	"\x05Order\x12\x19\n" +
	"\border_id\x18\x01 \x01(\tR\aorderId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\x03R\x06userId\x12\x1d\n" +
	"\n" +
	"product_id\x18\x03 \x01(\x03R\tproductId\x12!\n" +
	"\fproduct_type\x18\x04 \x01(\tR\vproductType\x12\x1a\n" +
	"\bquantity\x18\x05 \x01(\x05R\bquantity\x12\x16\n" +
	"\x06amount\x18\x06 \x01(\x01R\x06amount\x12\x1a\n" +
	"\bcurrency\x18\a \x01(\tR\bcurrency\x12\x16\n" +
	"\x06status\x18\b \x01(\tR\x06status\x12\x1d\n" +
	"\n" +
	"payment_id\x18\t \x01(\tR\tpaymentId\x12!\n" +
	"\fpayment_type\x18\n" +
	" \x01(\tR\vpaymentType\x12!\n" +
	"\fpayment_time\x18\v \x01(\tR\vpaymentTime\x12 \n" +
	"\vdescription\x18\f \x01(\tR\vdescription\x12\x1a\n" +
	"\bmetadata\x18\r \x01(\tR\bmetadata\x12\x1d\n" +
	"\n" +
	"created_at\x18\x0e \x01(\tR\tcreatedAt\x12\x1d\n" +
	"\n" +
	"updated_at\x18\x0f \x01(\tR\tupdatedAt\x12\x1f\n" +
	"\vexpire_time\x18\x10 \x01(\tR\n" +
	"expireTime\"\xb7\x02\n" +
	"\x12CreateOrderRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\x03R\x06userId\x12\x1d\n" +
	"\n" +
	"product_id\x18\x02 \x01(\x03R\tproductId\x12!\n" +
	"\fproduct_type\x18\x03 \x01(\tR\vproductType\x12\x1a\n" +
	"\bquantity\x18\x04 \x01(\x05R\bquantity\x12\x16\n" +
	"\x06amount\x18\x05 \x01(\x01R\x06amount\x12\x1a\n" +
	"\bcurrency\x18\x06 \x01(\tR\bcurrency\x12 \n" +
	"\vdescription\x18\a \x01(\tR\vdescription\x12\x1a\n" +
	"\bmetadata\x18\b \x01(\tR\bmetadata\x12\x1b\n" +
	"\tclient_ip\x18\t \x01(\tR\bclientIp\x12\x1b\n" +
	"\tdevice_id\x18\n" +
	" \x01(\tR\bdeviceId\"\xdd\x01\n" +
	"\x13CreateOrderResponse\x12\x19\n" +
	"\border_id\x18\x01 \x01(\tR\aorderId\x12\x16\n" +
	"\x06amount\x18\x02 \x01(\x01R\x06amount\x12\x1a\n" +
	"\bcurrency\x18\x03 \x01(\tR\bcurrency\x12\x16\n" +
	"\x06status\x18\x04 \x01(\tR\x06status\x12\x1d\n" +
	"\n" +
	"created_at\x18\x05 \x01(\tR\tcreatedAt\x12\x1f\n" +
	"\vexpire_time\x18\x06 \x01(\tR\n" +
	"expireTime\x12\x1f\n" +
	"\vpayment_url\x18\a \x01(\tR\n" +
	"paymentUrl\"E\n" +
	"\x0fGetOrderRequest\x12\x19\n" +
	"\border_id\x18\x01 \x01(\tR\aorderId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\x03R\x06userId\"6\n" +
	"\x10GetOrderResponse\x12\"\n" +
	"\x05order\x18\x01 \x01(\v2\f.trade.OrderR\x05order\"\xd2\x01\n" +
	"\x11ListOrdersRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\x03R\x06userId\x12\x16\n" +
	"\x06status\x18\x02 \x01(\tR\x06status\x12\x1d\n" +
	"\n" +
	"start_time\x18\x03 \x01(\tR\tstartTime\x12\x19\n" +
	"\bend_time\x18\x04 \x01(\tR\aendTime\x12!\n" +
	"\fproduct_type\x18\x05 \x01(\tR\vproductType\x12\x12\n" +
	"\x04page\x18\x06 \x01(\x05R\x04page\x12\x1b\n" +
	"\tpage_size\x18\a \x01(\x05R\bpageSize\"x\n" +
	"\x12ListOrdersResponse\x12\x14\n" +
	"\x05total\x18\x01 \x01(\x05R\x05total\x12\x12\n" +
	"\x04page\x18\x02 \x01(\x05R\x04page\x12\x12\n" +
	"\x04size\x18\x03 \x01(\x05R\x04size\x12$\n" +
	"\x06orders\x18\x04 \x03(\v2\f.trade.OrderR\x06orders\"`\n" +
	"\x12CancelOrderRequest\x12\x19\n" +
	"\border_id\x18\x01 \x01(\tR\aorderId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\x03R\x06userId\x12\x16\n" +
	"\x06reason\x18\x03 \x01(\tR\x06reason\"|\n" +
	"\x13CancelOrderResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x19\n" +
	"\border_id\x18\x02 \x01(\tR\aorderId\x12\x16\n" +
	"\x06status\x18\x03 \x01(\tR\x06status\x12\x18\n" +
	"\amessage\x18\x04 \x01(\tR\amessage\"\x86\x01\n" +
	"\x18UpdateOrderStatusRequest\x12\x19\n" +
	"\border_id\x18\x01 \x01(\tR\aorderId\x12\x16\n" +
	"\x06status\x18\x02 \x01(\tR\x06status\x12\x1f\n" +
	"\voperator_id\x18\x03 \x01(\tR\n" +
	"operatorId\x12\x16\n" +
	"\x06reason\x18\x04 \x01(\tR\x06reason\"\x82\x01\n" +
	"\x19UpdateOrderStatusResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x19\n" +
	"\border_id\x18\x02 \x01(\tR\aorderId\x12\x16\n" +
	"\x06status\x18\x03 \x01(\tR\x06status\x12\x18\n" +
	"\amessage\x18\x04 \x01(\tR\amessage\"\x80\x02\n" +
	"\x15ProcessPaymentRequest\x12\x19\n" +
	"\border_id\x18\x01 \x01(\tR\aorderId\x12!\n" +
	"\fpayment_type\x18\x02 \x01(\tR\vpaymentType\x12\x16\n" +
	"\x06amount\x18\x03 \x01(\x01R\x06amount\x12\x1a\n" +
	"\bcurrency\x18\x04 \x01(\tR\bcurrency\x12\x1d\n" +
	"\n" +
	"return_url\x18\x05 \x01(\tR\treturnUrl\x12\x1d\n" +
	"\n" +
	"notify_url\x18\x06 \x01(\tR\tnotifyUrl\x12\x1b\n" +
	"\tclient_ip\x18\a \x01(\tR\bclientIp\x12\x1a\n" +
	"\bmetadata\x18\b \x01(\tR\bmetadata\"\xd8\x01\n" +
	"\x16ProcessPaymentResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x1d\n" +
	"\n" +
	"payment_id\x18\x02 \x01(\tR\tpaymentId\x12\x19\n" +
	"\border_id\x18\x03 \x01(\tR\aorderId\x12\x1f\n" +
	"\vpayment_url\x18\x04 \x01(\tR\n" +
	"paymentUrl\x12\x17\n" +
	"\aqr_code\x18\x05 \x01(\tR\x06qrCode\x12\x16\n" +
	"\x06status\x18\x06 \x01(\tR\x06status\x12\x18\n" +
	"\amessage\x18\a \x01(\tR\amessage\"\xc4\x02\n" +
	"\x16PaymentCallbackRequest\x12\x1d\n" +
	"\n" +
	"payment_id\x18\x01 \x01(\tR\tpaymentId\x12\x19\n" +
	"\border_id\x18\x02 \x01(\tR\aorderId\x12\x16\n" +
	"\x06amount\x18\x03 \x01(\x01R\x06amount\x12\x1a\n" +
	"\bcurrency\x18\x04 \x01(\tR\bcurrency\x12\x16\n" +
	"\x06status\x18\x05 \x01(\tR\x06status\x12!\n" +
	"\fpayment_type\x18\x06 \x01(\tR\vpaymentType\x12!\n" +
	"\fpayment_time\x18\a \x01(\tR\vpaymentTime\x12\x1c\n" +
	"\tsignature\x18\b \x01(\tR\tsignature\x12\x19\n" +
	"\braw_data\x18\t \x01(\tR\arawData\x12%\n" +
	"\x0etransaction_id\x18\n" +
	" \x01(\tR\rtransactionId\"M\n" +
	"\x17PaymentCallbackResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"\x97\x03\n" +
	"\x06Refund\x12\x1b\n" +
	"\trefund_id\x18\x01 \x01(\tR\brefundId\x12\x19\n" +
	"\border_id\x18\x02 \x01(\tR\aorderId\x12\x17\n" +
	"\auser_id\x18\x03 \x01(\x03R\x06userId\x12\x16\n" +
	"\x06amount\x18\x04 \x01(\x01R\x06amount\x12\x1a\n" +
	"\bcurrency\x18\x05 \x01(\tR\bcurrency\x12\x16\n" +
	"\x06status\x18\x06 \x01(\tR\x06status\x12\x16\n" +
	"\x06reason\x18\a \x01(\tR\x06reason\x12 \n" +
	"\vdescription\x18\b \x01(\tR\vdescription\x12!\n" +
	"\fprocessed_by\x18\t \x01(\tR\vprocessedBy\x12!\n" +
	"\fprocess_time\x18\n" +
	" \x01(\tR\vprocessTime\x12\x1d\n" +
	"\n" +
	"created_at\x18\v \x01(\tR\tcreatedAt\x12\x1d\n" +
	"\n" +
	"updated_at\x18\f \x01(\tR\tupdatedAt\x122\n" +
	"\x15refund_transaction_id\x18\r \x01(\tR\x13refundTransactionId\"\x9b\x01\n" +
	"\x13CreateRefundRequest\x12\x19\n" +
	"\border_id\x18\x01 \x01(\tR\aorderId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\x03R\x06userId\x12\x16\n" +
	"\x06amount\x18\x03 \x01(\x01R\x06amount\x12\x16\n" +
	"\x06reason\x18\x04 \x01(\tR\x06reason\x12 \n" +
	"\vdescription\x18\x05 \x01(\tR\vdescription\"\x9d\x01\n" +
	"\x14CreateRefundResponse\x12\x1b\n" +
	"\trefund_id\x18\x01 \x01(\tR\brefundId\x12\x19\n" +
	"\border_id\x18\x02 \x01(\tR\aorderId\x12\x16\n" +
	"\x06amount\x18\x03 \x01(\x01R\x06amount\x12\x16\n" +
	"\x06status\x18\x04 \x01(\tR\x06status\x12\x1d\n" +
	"\n" +
	"created_at\x18\x05 \x01(\tR\tcreatedAt\"H\n" +
	"\x10GetRefundRequest\x12\x1b\n" +
	"\trefund_id\x18\x01 \x01(\tR\brefundId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\x03R\x06userId\":\n" +
	"\x11GetRefundResponse\x12%\n" +
	"\x06refund\x18\x01 \x01(\v2\r.trade.RefundR\x06refund\"\xcb\x01\n" +
	"\x12ListRefundsRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\x03R\x06userId\x12\x19\n" +
	"\border_id\x18\x02 \x01(\tR\aorderId\x12\x16\n" +
	"\x06status\x18\x03 \x01(\tR\x06status\x12\x1d\n" +
	"\n" +
	"start_time\x18\x04 \x01(\tR\tstartTime\x12\x19\n" +
	"\bend_time\x18\x05 \x01(\tR\aendTime\x12\x12\n" +
	"\x04page\x18\x06 \x01(\x05R\x04page\x12\x1b\n" +
	"\tpage_size\x18\a \x01(\x05R\bpageSize\"|\n" +
	"\x13ListRefundsResponse\x12\x14\n" +
	"\x05total\x18\x01 \x01(\x05R\x05total\x12\x12\n" +
	"\x04page\x18\x02 \x01(\x05R\x04page\x12\x12\n" +
	"\x04size\x18\x03 \x01(\x05R\x04size\x12'\n" +
	"\arefunds\x18\x04 \x03(\v2\r.trade.RefundR\arefunds\"\x88\x01\n" +
	"\x14ProcessRefundRequest\x12\x1b\n" +
	"\trefund_id\x18\x01 \x01(\tR\brefundId\x12\x16\n" +
	"\x06action\x18\x02 \x01(\tR\x06action\x12\x18\n" +
	"\acomment\x18\x03 \x01(\tR\acomment\x12!\n" +
	"\fprocessed_by\x18\x04 \x01(\tR\vprocessedBy\"\x80\x01\n" +
	"\x15ProcessRefundResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x1b\n" +
	"\trefund_id\x18\x02 \x01(\tR\brefundId\x12\x16\n" +
	"\x06status\x18\x03 \x01(\tR\x06status\x12\x18\n" +
	"\amessage\x18\x04 \x01(\tR\amessage\"y\n" +
	"\vBalanceItem\x12\x1a\n" +
	"\bcurrency\x18\x01 \x01(\tR\bcurrency\x12\x1c\n" +
	"\tavailable\x18\x02 \x01(\x01R\tavailable\x12\x18\n" +
	"\apending\x18\x03 \x01(\x01R\apending\x12\x16\n" +
	"\x06frozen\x18\x04 \x01(\x01R\x06frozen\",\n" +
	"\x11GetBalanceRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\x03R\x06userId\"|\n" +
	"\x12GetBalanceResponse\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\x03R\x06userId\x12.\n" +
	"\bbalances\x18\x02 \x03(\v2\x12.trade.BalanceItemR\bbalances\x12\x1d\n" +
	"\n" +
	"updated_at\x18\x03 \x01(\tR\tupdatedAt\"\xad\x02\n" +
	"\x0fTransactionItem\x12%\n" +
	"\x0etransaction_id\x18\x01 \x01(\tR\rtransactionId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\x03R\x06userId\x12\x1d\n" +
	"\n" +
	"related_id\x18\x03 \x01(\tR\trelatedId\x12\x12\n" +
	"\x04type\x18\x04 \x01(\tR\x04type\x12\x16\n" +
	"\x06amount\x18\x05 \x01(\x01R\x06amount\x12\x1a\n" +
	"\bcurrency\x18\x06 \x01(\tR\bcurrency\x12\x16\n" +
	"\x06status\x18\a \x01(\tR\x06status\x12 \n" +
	"\vdescription\x18\b \x01(\tR\vdescription\x12\x1a\n" +
	"\bmetadata\x18\t \x01(\tR\bmetadata\x12\x1d\n" +
	"\n" +
	"created_at\x18\n" +
	" \x01(\tR\tcreatedAt\"\xc8\x01\n" +
	"\x16GetTransactionsRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\x03R\x06userId\x12\x12\n" +
	"\x04type\x18\x02 \x01(\tR\x04type\x12\x16\n" +
	"\x06status\x18\x03 \x01(\tR\x06status\x12\x1d\n" +
	"\n" +
	"start_time\x18\x04 \x01(\tR\tstartTime\x12\x19\n" +
	"\bend_time\x18\x05 \x01(\tR\aendTime\x12\x12\n" +
	"\x04page\x18\x06 \x01(\x05R\x04page\x12\x1b\n" +
	"\tpage_size\x18\a \x01(\x05R\bpageSize\"\x93\x01\n" +
	"\x17GetTransactionsResponse\x12\x14\n" +
	"\x05total\x18\x01 \x01(\x05R\x05total\x12\x12\n" +
	"\x04page\x18\x02 \x01(\x05R\x04page\x12\x12\n" +
	"\x04size\x18\x03 \x01(\x05R\x04size\x12:\n" +
	"\ftransactions\x18\x04 \x03(\v2\x16.trade.TransactionItemR\ftransactions\"\xa7\x01\n" +
	"\x0fReportDataPoint\x12\x12\n" +
	"\x04date\x18\x01 \x01(\tR\x04date\x12\x16\n" +
	"\x06income\x18\x02 \x01(\x01R\x06income\x12\x16\n" +
	"\x06refund\x18\x03 \x01(\x01R\x06refund\x12\x10\n" +
	"\x03net\x18\x04 \x01(\x01R\x03net\x12\x1f\n" +
	"\vorder_count\x18\x05 \x01(\x05R\n" +
	"orderCount\x12\x1d\n" +
	"\n" +
	"user_count\x18\x06 \x01(\x05R\tuserCount\"\x85\x01\n" +
	"\x19GetFinancialReportRequest\x12\x1d\n" +
	"\n" +
	"start_time\x18\x01 \x01(\tR\tstartTime\x12\x19\n" +
	"\bend_time\x18\x02 \x01(\tR\aendTime\x12\x12\n" +
	"\x04type\x18\x03 \x01(\tR\x04type\x12\x1a\n" +
	"\bcurrency\x18\x04 \x01(\tR\bcurrency\"\xce\x02\n" +
	"\x1aGetFinancialReportResponse\x12\x1d\n" +
	"\n" +
	"start_time\x18\x01 \x01(\tR\tstartTime\x12\x19\n" +
	"\bend_time\x18\x02 \x01(\tR\aendTime\x12\x1a\n" +
	"\bcurrency\x18\x03 \x01(\tR\bcurrency\x12!\n" +
	"\ftotal_income\x18\x04 \x01(\x01R\vtotalIncome\x12!\n" +
	"\ftotal_refund\x18\x05 \x01(\x01R\vtotalRefund\x12\x1b\n" +
	"\ttotal_net\x18\x06 \x01(\x01R\btotalNet\x12\x1f\n" +
	"\vorder_count\x18\a \x01(\x05R\n" +
	"orderCount\x12\x1d\n" +
	"\n" +
	"user_count\x18\b \x01(\x05R\tuserCount\x127\n" +
	"\vdata_points\x18\t \x03(\v2\x16.trade.ReportDataPointR\n" +
	"dataPoints2\xb3\b\n" +
	"\x05Trade\x12F\n" +
	"\vCreateOrder\x12\x19.trade.CreateOrderRequest\x1a\x1a.trade.CreateOrderResponse\"\x00\x12=\n" +
	"\bGetOrder\x12\x16.trade.GetOrderRequest\x1a\x17.trade.GetOrderResponse\"\x00\x12C\n" +
	"\n" +
	"ListOrders\x12\x18.trade.ListOrdersRequest\x1a\x19.trade.ListOrdersResponse\"\x00\x12F\n" +
	"\vCancelOrder\x12\x19.trade.CancelOrderRequest\x1a\x1a.trade.CancelOrderResponse\"\x00\x12X\n" +
	"\x11UpdateOrderStatus\x12\x1f.trade.UpdateOrderStatusRequest\x1a .trade.UpdateOrderStatusResponse\"\x00\x12O\n" +
	"\x0eProcessPayment\x12\x1c.trade.ProcessPaymentRequest\x1a\x1d.trade.ProcessPaymentResponse\"\x00\x12R\n" +
	"\x0fPaymentCallback\x12\x1d.trade.PaymentCallbackRequest\x1a\x1e.trade.PaymentCallbackResponse\"\x00\x12I\n" +
	"\fCreateRefund\x12\x1a.trade.CreateRefundRequest\x1a\x1b.trade.CreateRefundResponse\"\x00\x12@\n" +
	"\tGetRefund\x12\x17.trade.GetRefundRequest\x1a\x18.trade.GetRefundResponse\"\x00\x12F\n" +
	"\vListRefunds\x12\x19.trade.ListRefundsRequest\x1a\x1a.trade.ListRefundsResponse\"\x00\x12L\n" +
	"\rProcessRefund\x12\x1b.trade.ProcessRefundRequest\x1a\x1c.trade.ProcessRefundResponse\"\x00\x12C\n" +
	"\n" +
	"GetBalance\x12\x18.trade.GetBalanceRequest\x1a\x19.trade.GetBalanceResponse\"\x00\x12R\n" +
	"\x0fGetTransactions\x12\x1d.trade.GetTransactionsRequest\x1a\x1e.trade.GetTransactionsResponse\"\x00\x12[\n" +
	"\x12GetFinancialReport\x12 .trade.GetFinancialReportRequest\x1a!.trade.GetFinancialReportResponse\"\x00B\tZ\a./tradeb\x06proto3"

var (
	file_api_rpc_trade_proto_rawDescOnce sync.Once
	file_api_rpc_trade_proto_rawDescData []byte
)

func file_api_rpc_trade_proto_rawDescGZIP() []byte {
	file_api_rpc_trade_proto_rawDescOnce.Do(func() {
		file_api_rpc_trade_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_api_rpc_trade_proto_rawDesc), len(file_api_rpc_trade_proto_rawDesc)))
	})
	return file_api_rpc_trade_proto_rawDescData
}

var file_api_rpc_trade_proto_msgTypes = make([]protoimpl.MessageInfo, 33)
var file_api_rpc_trade_proto_goTypes = []any{
	(*Order)(nil),                      // 0: trade.Order
	(*CreateOrderRequest)(nil),         // 1: trade.CreateOrderRequest
	(*CreateOrderResponse)(nil),        // 2: trade.CreateOrderResponse
	(*GetOrderRequest)(nil),            // 3: trade.GetOrderRequest
	(*GetOrderResponse)(nil),           // 4: trade.GetOrderResponse
	(*ListOrdersRequest)(nil),          // 5: trade.ListOrdersRequest
	(*ListOrdersResponse)(nil),         // 6: trade.ListOrdersResponse
	(*CancelOrderRequest)(nil),         // 7: trade.CancelOrderRequest
	(*CancelOrderResponse)(nil),        // 8: trade.CancelOrderResponse
	(*UpdateOrderStatusRequest)(nil),   // 9: trade.UpdateOrderStatusRequest
	(*UpdateOrderStatusResponse)(nil),  // 10: trade.UpdateOrderStatusResponse
	(*ProcessPaymentRequest)(nil),      // 11: trade.ProcessPaymentRequest
	(*ProcessPaymentResponse)(nil),     // 12: trade.ProcessPaymentResponse
	(*PaymentCallbackRequest)(nil),     // 13: trade.PaymentCallbackRequest
	(*PaymentCallbackResponse)(nil),    // 14: trade.PaymentCallbackResponse
	(*Refund)(nil),                     // 15: trade.Refund
	(*CreateRefundRequest)(nil),        // 16: trade.CreateRefundRequest
	(*CreateRefundResponse)(nil),       // 17: trade.CreateRefundResponse
	(*GetRefundRequest)(nil),           // 18: trade.GetRefundRequest
	(*GetRefundResponse)(nil),          // 19: trade.GetRefundResponse
	(*ListRefundsRequest)(nil),         // 20: trade.ListRefundsRequest
	(*ListRefundsResponse)(nil),        // 21: trade.ListRefundsResponse
	(*ProcessRefundRequest)(nil),       // 22: trade.ProcessRefundRequest
	(*ProcessRefundResponse)(nil),      // 23: trade.ProcessRefundResponse
	(*BalanceItem)(nil),                // 24: trade.BalanceItem
	(*GetBalanceRequest)(nil),          // 25: trade.GetBalanceRequest
	(*GetBalanceResponse)(nil),         // 26: trade.GetBalanceResponse
	(*TransactionItem)(nil),            // 27: trade.TransactionItem
	(*GetTransactionsRequest)(nil),     // 28: trade.GetTransactionsRequest
	(*GetTransactionsResponse)(nil),    // 29: trade.GetTransactionsResponse
	(*ReportDataPoint)(nil),            // 30: trade.ReportDataPoint
	(*GetFinancialReportRequest)(nil),  // 31: trade.GetFinancialReportRequest
	(*GetFinancialReportResponse)(nil), // 32: trade.GetFinancialReportResponse
}
var file_api_rpc_trade_proto_depIdxs = []int32{
	0,  // 0: trade.GetOrderResponse.order:type_name -> trade.Order
	0,  // 1: trade.ListOrdersResponse.orders:type_name -> trade.Order
	15, // 2: trade.GetRefundResponse.refund:type_name -> trade.Refund
	15, // 3: trade.ListRefundsResponse.refunds:type_name -> trade.Refund
	24, // 4: trade.GetBalanceResponse.balances:type_name -> trade.BalanceItem
	27, // 5: trade.GetTransactionsResponse.transactions:type_name -> trade.TransactionItem
	30, // 6: trade.GetFinancialReportResponse.data_points:type_name -> trade.ReportDataPoint
	1,  // 7: trade.Trade.CreateOrder:input_type -> trade.CreateOrderRequest
	3,  // 8: trade.Trade.GetOrder:input_type -> trade.GetOrderRequest
	5,  // 9: trade.Trade.ListOrders:input_type -> trade.ListOrdersRequest
	7,  // 10: trade.Trade.CancelOrder:input_type -> trade.CancelOrderRequest
	9,  // 11: trade.Trade.UpdateOrderStatus:input_type -> trade.UpdateOrderStatusRequest
	11, // 12: trade.Trade.ProcessPayment:input_type -> trade.ProcessPaymentRequest
	13, // 13: trade.Trade.PaymentCallback:input_type -> trade.PaymentCallbackRequest
	16, // 14: trade.Trade.CreateRefund:input_type -> trade.CreateRefundRequest
	18, // 15: trade.Trade.GetRefund:input_type -> trade.GetRefundRequest
	20, // 16: trade.Trade.ListRefunds:input_type -> trade.ListRefundsRequest
	22, // 17: trade.Trade.ProcessRefund:input_type -> trade.ProcessRefundRequest
	25, // 18: trade.Trade.GetBalance:input_type -> trade.GetBalanceRequest
	28, // 19: trade.Trade.GetTransactions:input_type -> trade.GetTransactionsRequest
	31, // 20: trade.Trade.GetFinancialReport:input_type -> trade.GetFinancialReportRequest
	2,  // 21: trade.Trade.CreateOrder:output_type -> trade.CreateOrderResponse
	4,  // 22: trade.Trade.GetOrder:output_type -> trade.GetOrderResponse
	6,  // 23: trade.Trade.ListOrders:output_type -> trade.ListOrdersResponse
	8,  // 24: trade.Trade.CancelOrder:output_type -> trade.CancelOrderResponse
	10, // 25: trade.Trade.UpdateOrderStatus:output_type -> trade.UpdateOrderStatusResponse
	12, // 26: trade.Trade.ProcessPayment:output_type -> trade.ProcessPaymentResponse
	14, // 27: trade.Trade.PaymentCallback:output_type -> trade.PaymentCallbackResponse
	17, // 28: trade.Trade.CreateRefund:output_type -> trade.CreateRefundResponse
	19, // 29: trade.Trade.GetRefund:output_type -> trade.GetRefundResponse
	21, // 30: trade.Trade.ListRefunds:output_type -> trade.ListRefundsResponse
	23, // 31: trade.Trade.ProcessRefund:output_type -> trade.ProcessRefundResponse
	26, // 32: trade.Trade.GetBalance:output_type -> trade.GetBalanceResponse
	29, // 33: trade.Trade.GetTransactions:output_type -> trade.GetTransactionsResponse
	32, // 34: trade.Trade.GetFinancialReport:output_type -> trade.GetFinancialReportResponse
	21, // [21:35] is the sub-list for method output_type
	7,  // [7:21] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_api_rpc_trade_proto_init() }
func file_api_rpc_trade_proto_init() {
	if File_api_rpc_trade_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_api_rpc_trade_proto_rawDesc), len(file_api_rpc_trade_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   33,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_rpc_trade_proto_goTypes,
		DependencyIndexes: file_api_rpc_trade_proto_depIdxs,
		MessageInfos:      file_api_rpc_trade_proto_msgTypes,
	}.Build()
	File_api_rpc_trade_proto = out.File
	file_api_rpc_trade_proto_goTypes = nil
	file_api_rpc_trade_proto_depIdxs = nil
}
