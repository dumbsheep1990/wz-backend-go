// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.2

package types

type LoginReq struct {
	Username string `json:"username" validate:"required"`
	Password string `json:"password" validate:"required"`
}

type LoginResp struct {
	UserId   int64  `json:"user_id"`
	Username string `json:"username"`
	Token    string `json:"token"`
}

type RegisterReq struct {
	Username string `json:"username" validate:"required"`
	Password string `json:"password" validate:"required"`
	Email    string `json:"email" validate:"required,email"`
	Phone    string `json:"phone" validate:"required"`
}

type RegisterResp struct {
	UserId   int64  `json:"user_id"`
	Username string `json:"username"`
	Token    string `json:"token"`
}

type UpdateUserReq struct {
	Username string `json:"username,optional"`
	Email    string `json:"email,optional"`
	Phone    string `json:"phone,optional"`
	Password string `json:"password,optional"`
}

type UpdateUserResp struct {
	Success bool `json:"success"`
}

type UserBehaviorRecord struct {
	BehaviorId   int64  `json:"behavior_id"`
	UserId       int64  `json:"user_id"`
	Action       string `json:"action"`
	ResourceType string `json:"resource_type"`
	ResourceId   int64  `json:"resource_id"`
	CreatedAt    string `json:"created_at"`
}

type UserBehaviorReq struct {
	StartTime string `json:"start_time,optional"`
	EndTime   string `json:"end_time,optional"`
}

type UserBehaviorResp struct {
	Behaviors []UserBehaviorRecord `json:"behaviors"`
}

type UserInfo struct {
	UserId            int64  `json:"user_id"`
	Username          string `json:"username"`
	Email             string `json:"email"`
	Phone             string `json:"phone"`
	Status            int32  `json:"status"`
	IsVerified        bool   `json:"is_verified"`
	IsCompanyVerified bool   `json:"is_company_verified"`
	CreatedAt         string `json:"created_at"`
	UpdatedAt         string `json:"updated_at"`
}

// CompanyType represents the type of company for verification
type CompanyType int32

const (
	CompanyTypeEnterprise    CompanyType = 1 // 企业
	CompanyTypeGroup         CompanyType = 2 // 集团
	CompanyTypeGovernment    CompanyType = 3 // 政府机构/NGO/协会
	CompanyTypeResearchInst  CompanyType = 4 // 科研所
)

type VerifyCompanyReq struct {
	CompanyType     CompanyType `json:"company_type" validate:"required"`
	CompanyName     string      `json:"company_name" validate:"required"`
	// 通用字段
	BusinessLicense string      `json:"business_license"`
	CommitteeLetter string      `json:"committee_letter"`
	// 企业特定字段
	OrgCodeCert     string      `json:"org_code_cert"`
	AgencyCert      string      `json:"agency_cert"`
	// 集团特定字段
	OrgStructure    string      `json:"org_structure"`
	// 政府机构/NGO/协会特定字段
	UnifiedSocialCredit string  `json:"unified_social_credit"`
	// 科研所特定字段
	ResearchCert    string      `json:"research_cert"`
	// 其他通用字段
	ContactPerson   string      `json:"contact_person" validate:"required"`
	ContactPhone    string      `json:"contact_phone" validate:"required"`
	UploadedDocument string     `json:"uploaded_document"`
}

type VerifyCompanyResp struct {
	Success bool `json:"success"`
}

type EnterpriseRegistrationReq struct {
	CompanyName      string      `json:"company_name" validate:"required"`
	CompanyType      CompanyType `json:"company_type" validate:"required"`
	ContactPerson    string      `json:"contact_person" validate:"required"`
	JobPosition      string      `json:"job_position" validate:"required"`
	Region           string      `json:"region" validate:"required"`
	VerificationMethod string    `json:"verification_method" validate:"required"`
	DetailedAddress  string      `json:"detailed_address" validate:"required"`
	LocationLatitude float64     `json:"location_latitude"`
	LocationLongitude float64    `json:"location_longitude"`
}

type EnterpriseRegistrationResp struct {
	Success bool `json:"success"`
}

type VerifyUserReq struct {
	VerificationCode string `json:"verification_code" validate:"required"`
}

type VerifyUserResp struct {
	Success bool `json:"success"`
}
