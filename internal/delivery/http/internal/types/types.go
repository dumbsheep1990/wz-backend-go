// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.2

package types

type LoginReq struct {
	Username string `json:"username" validate:"required"`
	Password string `json:"password" validate:"required"`
}

type LoginResp struct {
	UserId   int64  `json:"user_id"`
	Username string `json:"username"`
	Token    string `json:"token"`
}

type RegisterReq struct {
	Username string `json:"username" validate:"required"`
	Password string `json:"password" validate:"required"`
	Email    string `json:"email" validate:"required,email"`
	Phone    string `json:"phone" validate:"required"`
}

type RegisterResp struct {
	UserId   int64  `json:"user_id"`
	Username string `json:"username"`
	Token    string `json:"token"`
}

type UpdateUserReq struct {
	Username string `json:"username,optional"`
	Email    string `json:"email,optional"`
	Phone    string `json:"phone,optional"`
	Password string `json:"password,optional"`
}

type UpdateUserResp struct {
	Success bool `json:"success"`
}

type UserBehaviorRecord struct {
	BehaviorId   int64  `json:"behavior_id"`
	UserId       int64  `json:"user_id"`
	Action       string `json:"action"`
	ResourceType string `json:"resource_type"`
	ResourceId   int64  `json:"resource_id"`
	CreatedAt    string `json:"created_at"`
}

type UserBehaviorReq struct {
	StartTime string `json:"start_time,optional"`
	EndTime   string `json:"end_time,optional"`
}

type UserBehaviorResp struct {
	Behaviors []UserBehaviorRecord `json:"behaviors"`
}

type UserInfo struct {
	UserId            int64  `json:"user_id"`
	Username          string `json:"username"`
	Email             string `json:"email"`
	Phone             string `json:"phone"`
	Status            int32  `json:"status"`
	IsVerified        bool   `json:"is_verified"`
	IsCompanyVerified bool   `json:"is_company_verified"`
	CreatedAt         string `json:"created_at"`
	UpdatedAt         string `json:"updated_at"`
}

type VerifyCompanyReq struct {
	CompanyName     string `json:"company_name" validate:"required"`
	BusinessLicense string `json:"business_license" validate:"required"`
	ContactPerson   string `json:"contact_person" validate:"required"`
	ContactPhone    string `json:"contact_phone" validate:"required"`
}

type VerifyCompanyResp struct {
	Success bool `json:"success"`
}

type VerifyUserReq struct {
	VerificationCode string `json:"verification_code" validate:"required"`
}

type VerifyUserResp struct {
	Success bool `json:"success"`
}
