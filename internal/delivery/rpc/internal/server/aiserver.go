// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.2
// Source: ai.proto

package server

import (
	"context"

	"wz-backend-go/api/rpc/ai"
	"wz-backend-go/internal/delivery/rpc/internal/logic"
	"wz-backend-go/internal/delivery/rpc/internal/svc"
)

type AIServer struct {
	svcCtx *svc.ServiceContext
	ai.UnimplementedAIServer
}

func NewAIServer(svcCtx *svc.ServiceContext) *AIServer {
	return &AIServer{
		svcCtx: svcCtx,
	}
}

// 获取推荐内容
func (s *AIServer) Recommend(ctx context.Context, in *ai.RecommendRequest) (*ai.RecommendResponse, error) {
	l := logic.NewRecommendLogic(ctx, s.svcCtx)
	return l.Recommend(in)
}

// 内容审核
func (s *AIServer) ContentReview(ctx context.Context, in *ai.ContentReviewRequest) (*ai.ContentReviewResponse, error) {
	l := logic.NewContentReviewLogic(ctx, s.svcCtx)
	return l.ContentReview(in)
}

// 客服对话
func (s *AIServer) Chat(ctx context.Context, in *ai.ChatRequest) (*ai.ChatResponse, error) {
	l := logic.NewChatLogic(ctx, s.svcCtx)
	return l.Chat(in)
}
