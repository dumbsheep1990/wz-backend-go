// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.2
// Source: search.proto

package server

import (
	"context"

	"wz-backend-go/api/rpc/search"
	"wz-backend-go/internal/delivery/rpc/internal/logic"
	"wz-backend-go/internal/delivery/rpc/internal/svc"
)

type SearchServer struct {
	svcCtx *svc.ServiceContext
	search.UnimplementedSearchServer
}

func NewSearchServer(svcCtx *svc.ServiceContext) *SearchServer {
	return &SearchServer{
		svcCtx: svcCtx,
	}
}

// 全文搜索
func (s *SearchServer) SearchContent(ctx context.Context, in *search.SearchContentRequest) (*search.SearchContentResponse, error) {
	l := logic.NewSearchContentLogic(ctx, s.svcCtx)
	return l.SearchContent(in)
}

// 搜索推荐
func (s *SearchServer) GetSuggestions(ctx context.Context, in *search.GetSuggestionsRequest) (*search.GetSuggestionsResponse, error) {
	l := logic.NewGetSuggestionsLogic(ctx, s.svcCtx)
	return l.GetSuggestions(in)
}

// 获取热搜词
func (s *SearchServer) GetHotSearches(ctx context.Context, in *search.GetHotSearchesRequest) (*search.GetHotSearchesResponse, error) {
	l := logic.NewGetHotSearchesLogic(ctx, s.svcCtx)
	return l.GetHotSearches(in)
}

// 管理热搜词
func (s *SearchServer) AddHotSearch(ctx context.Context, in *search.AddHotSearchRequest) (*search.AddHotSearchResponse, error) {
	l := logic.NewAddHotSearchLogic(ctx, s.svcCtx)
	return l.AddHotSearch(in)
}

func (s *SearchServer) DeleteHotSearch(ctx context.Context, in *search.DeleteHotSearchRequest) (*search.DeleteHotSearchResponse, error) {
	l := logic.NewDeleteHotSearchLogic(ctx, s.svcCtx)
	return l.DeleteHotSearch(in)
}

// 搜索日志管理
func (s *SearchServer) LogSearchQuery(ctx context.Context, in *search.LogSearchQueryRequest) (*search.LogSearchQueryResponse, error) {
	l := logic.NewLogSearchQueryLogic(ctx, s.svcCtx)
	return l.LogSearchQuery(in)
}

func (s *SearchServer) GetSearchLogs(ctx context.Context, in *search.GetSearchLogsRequest) (*search.GetSearchLogsResponse, error) {
	l := logic.NewGetSearchLogsLogic(ctx, s.svcCtx)
	return l.GetSearchLogs(in)
}
