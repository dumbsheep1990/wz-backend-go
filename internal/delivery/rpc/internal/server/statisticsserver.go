// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.2
// Source: statistics.proto

package server

import (
	"context"

	"wz-backend-go/api/rpc/statistics"
	"wz-backend-go/internal/delivery/rpc/internal/logic"
	"wz-backend-go/internal/delivery/rpc/internal/svc"
)

type StatisticsServer struct {
	svcCtx *svc.ServiceContext
	statistics.UnimplementedStatisticsServer
}

func NewStatisticsServer(svcCtx *svc.ServiceContext) *StatisticsServer {
	return &StatisticsServer{
		svcCtx: svcCtx,
	}
}

// 获取用户行为统计
func (s *StatisticsServer) UserBehavior(ctx context.Context, in *statistics.UserBehaviorRequest) (*statistics.UserBehaviorResponse, error) {
	l := logic.NewUserBehaviorLogic(ctx, s.svcCtx)
	return l.UserBehavior(in)
}

// 获取内容流行度统计
func (s *StatisticsServer) ContentPopularity(ctx context.Context, in *statistics.ContentPopularityRequest) (*statistics.ContentPopularityResponse, error) {
	l := logic.NewContentPopularityLogic(ctx, s.svcCtx)
	return l.ContentPopularity(in)
}

// 获取热门内容
func (s *StatisticsServer) HotContent(ctx context.Context, in *statistics.HotContentRequest) (*statistics.HotContentResponse, error) {
	l := logic.NewHotContentLogic(ctx, s.svcCtx)
	return l.HotContent(in)
}

// 获取用户画像
func (s *StatisticsServer) UserProfile(ctx context.Context, in *statistics.UserProfileRequest) (*statistics.UserProfileResponse, error) {
	l := logic.NewUserProfileLogic(ctx, s.svcCtx)
	return l.UserProfile(in)
}
