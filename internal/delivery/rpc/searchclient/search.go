// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.2
// Source: search.proto

package searchclient

import (
	"context"

	"wz-backend-go/api/rpc/search"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	AddHotSearchRequest     = search.AddHotSearchRequest
	AddHotSearchResponse    = search.AddHotSearchResponse
	DeleteHotSearchRequest  = search.DeleteHotSearchRequest
	DeleteHotSearchResponse = search.DeleteHotSearchResponse
	GetHotSearchesRequest   = search.GetHotSearchesRequest
	GetHotSearchesResponse  = search.GetHotSearchesResponse
	GetSearchLogsRequest    = search.GetSearchLogsRequest
	GetSearchLogsResponse   = search.GetSearchLogsResponse
	GetSuggestionsRequest   = search.GetSuggestionsRequest
	GetSuggestionsResponse  = search.GetSuggestionsResponse
	HotSearchItem           = search.HotSearchItem
	LogSearchQueryRequest   = search.LogSearchQueryRequest
	LogSearchQueryResponse  = search.LogSearchQueryResponse
	SearchContentRequest    = search.SearchContentRequest
	SearchContentResponse   = search.SearchContentResponse
	SearchLogItem           = search.SearchLogItem
	SearchResultItem        = search.SearchResultItem

	Search interface {
		// 全文搜索
		SearchContent(ctx context.Context, in *SearchContentRequest, opts ...grpc.CallOption) (*SearchContentResponse, error)
		// 搜索推荐
		GetSuggestions(ctx context.Context, in *GetSuggestionsRequest, opts ...grpc.CallOption) (*GetSuggestionsResponse, error)
		// 获取热搜词
		GetHotSearches(ctx context.Context, in *GetHotSearchesRequest, opts ...grpc.CallOption) (*GetHotSearchesResponse, error)
		// 管理热搜词
		AddHotSearch(ctx context.Context, in *AddHotSearchRequest, opts ...grpc.CallOption) (*AddHotSearchResponse, error)
		DeleteHotSearch(ctx context.Context, in *DeleteHotSearchRequest, opts ...grpc.CallOption) (*DeleteHotSearchResponse, error)
		// 搜索日志管理
		LogSearchQuery(ctx context.Context, in *LogSearchQueryRequest, opts ...grpc.CallOption) (*LogSearchQueryResponse, error)
		GetSearchLogs(ctx context.Context, in *GetSearchLogsRequest, opts ...grpc.CallOption) (*GetSearchLogsResponse, error)
	}

	defaultSearch struct {
		cli zrpc.Client
	}
)

func NewSearch(cli zrpc.Client) Search {
	return &defaultSearch{
		cli: cli,
	}
}

// 全文搜索
func (m *defaultSearch) SearchContent(ctx context.Context, in *SearchContentRequest, opts ...grpc.CallOption) (*SearchContentResponse, error) {
	client := search.NewSearchClient(m.cli.Conn())
	return client.SearchContent(ctx, in, opts...)
}

// 搜索推荐
func (m *defaultSearch) GetSuggestions(ctx context.Context, in *GetSuggestionsRequest, opts ...grpc.CallOption) (*GetSuggestionsResponse, error) {
	client := search.NewSearchClient(m.cli.Conn())
	return client.GetSuggestions(ctx, in, opts...)
}

// 获取热搜词
func (m *defaultSearch) GetHotSearches(ctx context.Context, in *GetHotSearchesRequest, opts ...grpc.CallOption) (*GetHotSearchesResponse, error) {
	client := search.NewSearchClient(m.cli.Conn())
	return client.GetHotSearches(ctx, in, opts...)
}

// 管理热搜词
func (m *defaultSearch) AddHotSearch(ctx context.Context, in *AddHotSearchRequest, opts ...grpc.CallOption) (*AddHotSearchResponse, error) {
	client := search.NewSearchClient(m.cli.Conn())
	return client.AddHotSearch(ctx, in, opts...)
}

func (m *defaultSearch) DeleteHotSearch(ctx context.Context, in *DeleteHotSearchRequest, opts ...grpc.CallOption) (*DeleteHotSearchResponse, error) {
	client := search.NewSearchClient(m.cli.Conn())
	return client.DeleteHotSearch(ctx, in, opts...)
}

// 搜索日志管理
func (m *defaultSearch) LogSearchQuery(ctx context.Context, in *LogSearchQueryRequest, opts ...grpc.CallOption) (*LogSearchQueryResponse, error) {
	client := search.NewSearchClient(m.cli.Conn())
	return client.LogSearchQuery(ctx, in, opts...)
}

func (m *defaultSearch) GetSearchLogs(ctx context.Context, in *GetSearchLogsRequest, opts ...grpc.CallOption) (*GetSearchLogsResponse, error) {
	client := search.NewSearchClient(m.cli.Conn())
	return client.GetSearchLogs(ctx, in, opts...)
}
